{"version":3,"sources":["webpack:///./src/main/js/components/icons-components/ChartLegendIcon.tsx","webpack:///./src/main/js/components/charts/LineChart.css?1665","webpack:///./src/main/js/api/time-machine.ts","webpack:///./src/main/js/components/charts/AdvancedTimeline.css","webpack:///./src/main/js/components/charts/AdvancedTimeline.css?bebb","webpack:///./src/main/js/components/charts/AdvancedTimeline.js","webpack:///./src/main/js/components/charts/LineChart.css","webpack:///./src/main/js/apps/projectActivity/utils.js"],"names":["ChartLegendIcon","_a","className","_b","fill","size","react__WEBPACK_IMPORTED_MODULE_0__","_Icon__WEBPACK_IMPORTED_MODULE_1__","d","style","content","__webpack_require__","module","i","options","hmr","transform","insertInto","undefined","locals","exports","getAllTimeMachineData","data","prev","Object","_helpers_request__WEBPACK_IMPORTED_MODULE_0__","catch","_app_utils_throwGlobalError__WEBPACK_IMPORTED_MODULE_1__","getTimeMachineData","__assign","ps","then","r","result","measures","map","measure","idx","history","concat","paging","pageIndex","pageSize","total","p","push","AdvancedTimeline","_super","props","_this","call","this","getRatingScale","availableHeight","d3_scale__WEBPACK_IMPORTED_MODULE_8__","domain","range","getLevelScale","getYScale","flatData","metricType","d3_array__WEBPACK_IMPORTED_MODULE_7__","y","nice","getXScale","availableWidth","startDate","endDate","dateRange","x","start","end","xScale","lodash_sortBy__WEBPACK_IMPORTED_MODULE_2___default","clamp","maxXRange","getScales","width","padding","height","lodash_flatten__WEBPACK_IMPORTED_MODULE_4___default","series","serie","yScale","getSelectedDatePos","selectedDate","firstSerie","findIndex","valueOf","xRange","sort","xPos","selectedDateXPos","selectedDateIdx","getEventMarker","half","getMouseOverlayPos","target","state","mouseOverlayPos","pos","getBoundingClientRect","setState","handleWheel","evt","preventDefault","parentBbox","mouseXPos","pageX","left","speed","deltaMode","zoomSpeed","leftPos","Math","round","deltaY","rightPos","invert","handleZoomUpdate","updateZoom","handleMouseMove","updateTooltipPos","handleMouseEnter","mouseOver","handleMouseOut","updateTooltip","handleClick","updateSelectedDate","date","bisectX","right","previousPoint","nextPoint","xPos_1","renderHorizontalGrid","formatYTick","ticks","maxYTicksCount","length","formattedTicks","tick","lodash_uniq__WEBPACK_IMPORTED_MODULE_0___default","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","key","dx","dy","textAnchor","x1","x2","y1","y2","renderXAxisTicks","format","tickFormat","slice","index","nextTick","renderLeak","yRange","leakWidth","leakPeriodDate","_app_theme__WEBPACK_IMPORTED_MODULE_10__","renderLines","lineGenerator","d3_shape__WEBPACK_IMPORTED_MODULE_9__","defined","basisCurve","curve","name","classnames__WEBPACK_IMPORTED_MODULE_6___default","renderAreas","areaGenerator","y0","renderEvents","events","eventSize","inRangeEvents","filter","event","offset","getTime","renderSelectedDate","point","cx","cy","renderClipPath","id","renderMouseEventsOverlay","zoomEnabled","mouseEvents","onWheel","onMouseEnter","onMouseMove","onMouseOut","onClick","scales","selectedDatePos","lodash_throttle__WEBPACK_IMPORTED_MODULE_1___default","__extends","prototype","componentWillReceiveProps","nextProps","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3___default","render","disableZoom","isZoomed","chart-zoomed","hideGrid","hideXAxis","showAreas","showEventMarkers","defaultProps","PureComponent","EVENT_TYPES","APPLICATION_EVENT_TYPES","DEFAULT_GRAPH","GRAPH_TYPES","GRAPHS_METRICS_DISPLAYED","issues","coverage","duplications","GRAPHS_METRICS","PROJECT_ACTIVITY_GRAPH","PROJECT_ACTIVITY_GRAPH_CUSTOM","datesQueryChanged","prevQuery","nextQuery","lodash_isEqual__WEBPACK_IMPORTED_MODULE_1___default","from","to","activityQueryChanged","category","customMetricsChanged","customMetrics","hasDataValues","some","hasHistoryData","hasHistoryDataValue","historyQueryChanged","graph","isCustomGraph","selectedDateQueryChanged","generateCoveredLinesMetric","uncoveredLines","measuresHistory","linesToCover","find","metric","analysis","Number","value","translatedName","_helpers_l10n__WEBPACK_IMPORTED_MODULE_7__","type","generateSeries","metrics","displayedMetrics","lodash_sortBy__WEBPACK_IMPORTED_MODULE_0___default","indexOf","Array","isArray","findMetric","splitSeriesInGraphs","maxGraph","maxSeries","lodash_flatMap__WEBPACK_IMPORTED_MODULE_3___default","lodash_groupBy__WEBPACK_IMPORTED_MODULE_2___default","lodash_chunk__WEBPACK_IMPORTED_MODULE_4___default","getSeriesMetricType","getAnalysesByVersionByDay","analyses","query","reduce","acc","currentVersion","versionEvent","newVersion","version","byDay","keys","day","_helpers_dates__WEBPACK_IMPORTED_MODULE_6__","toString","matchFilters","isAfterFrom","isBeforeTo","hasSelectedCategoryEvents","getDisplayedHistoryMetrics","getHistoryMetrics","parseGraph","_helpers_query__WEBPACK_IMPORTED_MODULE_5__","includes","serializeGraph","parseQuery","urlQuery","project","serializeQuery","serializeUrlQuery","custom_metrics","selected_date"],"mappings":"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","file":"js/256.69b45bc5.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Icon, { IconProps } from './Icon';\n\nexport default function ChartLegendIcon({ className, fill = 'currentColor', size }: IconProps) {\n  return (\n    <Icon className={className} size={size}>\n      <path\n        d=\"M14.325 7.143v1.714q0 0.357-0.25 0.607t-0.607 0.25h-10.857q-0.357 0-0.607-0.25t-0.25-0.607v-1.714q0-0.357 0.25-0.607t0.607-0.25h10.857q0.357 0 0.607 0.25t0.25 0.607z\"\n        style={{ fill }}\n      />\n    </Icon>\n  );\n}\n","\nvar content = require(\"!!../../../../../node_modules/css-loader/index.js??ref--6-1!../../../../../node_modules/postcss-loader/lib/index.js??postcss!./LineChart.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/index.js??ref--6-1!../../../../../node_modules/postcss-loader/lib/index.js??postcss!./LineChart.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/index.js??ref--6-1!../../../../../node_modules/postcss-loader/lib/index.js??postcss!./LineChart.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON } from '../helpers/request';\nimport { Paging, BranchParameters } from '../app/types';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\nexport interface HistoryItem {\n  date: Date;\n  value?: string;\n}\n\nexport interface History {\n  [metric: string]: HistoryItem[];\n}\n\ninterface TimeMachineResponse {\n  measures: {\n    metric: string;\n    history: HistoryItem[];\n  }[];\n  paging: Paging;\n}\n\nexport function getTimeMachineData(\n  data: {\n    component: string;\n    from?: string;\n    metrics: string;\n    p?: number;\n    ps?: number;\n    to?: string;\n  } & BranchParameters\n): Promise<TimeMachineResponse> {\n  return getJSON('/api/measures/search_history', data).catch(throwGlobalError);\n}\n\nexport function getAllTimeMachineData(\n  data: {\n    component: string;\n    metrics: string;\n    from?: string;\n    p?: number;\n    to?: string;\n  } & BranchParameters,\n  prev?: TimeMachineResponse\n): Promise<TimeMachineResponse> {\n  return getTimeMachineData({ ...data, ps: 1000 }).then(r => {\n    const result = prev\n      ? {\n          measures: prev.measures.map((measure, idx) => ({\n            ...measure,\n            history: measure.history.concat(r.measures[idx].history)\n          })),\n          paging: r.paging\n        }\n      : r;\n\n    if (result.paging.pageIndex * result.paging.pageSize >= result.paging.total) {\n      return result;\n    }\n    return getAllTimeMachineData({ ...data, p: result.paging.pageIndex + 1 }, result);\n  });\n}\n","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".line-tooltip{fill:none;stroke:#777;stroke-width:1px;shape-rendering:crispEdges}.chart-mouse-events-overlay{fill:none;stroke:none;pointer-events:all}.chart-zoomed .leak-chart-rect,.chart-zoomed .line-chart-area,.chart-zoomed .line-chart-path{-webkit-clip-path:url(#chart-clip);clip-path:url(#chart-clip)}.line-chart-dot{fill:#4b9fd5}.line-chart-dot.line-chart-dot-1{fill:#236a97}.line-chart-dot.line-chart-dot-2{fill:#24c6e0}.line-chart-event{fill:#fff;stroke:#4b9fd5;stroke-width:2px}.line-chart-event.VERSION{stroke:#4b9fd5}.line-chart-event.QUALITY_GATE{stroke:#0a0}.line-chart-event.QUALITY_PROFILE{stroke:#ed7d20}.line-chart-event.OTHER{stroke:#9139d4}\", \"\"]);\n\n// exports\n","\nvar content = require(\"!!../../../../../node_modules/css-loader/index.js??ref--6-1!../../../../../node_modules/postcss-loader/lib/index.js??postcss!./AdvancedTimeline.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/index.js??ref--6-1!../../../../../node_modules/postcss-loader/lib/index.js??postcss!./AdvancedTimeline.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/index.js??ref--6-1!../../../../../node_modules/postcss-loader/lib/index.js??postcss!./AdvancedTimeline.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// @flow\nimport React from 'react';\nimport classNames from 'classnames';\nimport { flatten, isEqual, sortBy, throttle, uniq } from 'lodash';\nimport { bisector, extent, max } from 'd3-array';\nimport { scaleLinear, scalePoint, scaleTime } from 'd3-scale';\nimport { line as d3Line, area, curveBasis } from 'd3-shape';\nimport * as theme from '../../app/theme';\nimport './LineChart.css';\nimport './AdvancedTimeline.css';\n\n/*::\ntype Event = { className?: string, name: string, date: Date };\n*/\n/*::\nexport type Point = { x: Date, y: number | string };\n*/\n/*::\nexport type Serie = { name: string, data: Array<Point>, type: string };\n*/\n/*::\ntype Scale = Function;\n*/\n\n/*::\ntype Props = {\n  basisCurve?: boolean,\n  endDate: ?Date,\n  events?: Array<Event>,\n  eventSize?: number,\n  disableZoom?: boolean,\n  formatYTick?: number => string,\n  hideGrid?: boolean,\n  hideXAxis?: boolean,\n  height: number,\n  width: number,\n  leakPeriodDate?: Date,\n  // used to avoid same y ticks labels\n  maxYTicksCount?: number,\n  metricType: string,\n  padding: Array<number>,\n  selectedDate?: Date,\n  series: Array<Serie>,\n  showAreas?: boolean,\n  showEventMarkers?: boolean,\n  startDate: ?Date,\n  updateSelectedDate?: (selectedDate: ?Date) => void,\n  updateTooltip?: (selectedDate: ?Date, tooltipXPos: ?number, tooltipIdx: ?number) => void,\n  updateZoom?: (start: ?Date, endDate: ?Date) => void,\n  zoomSpeed: number\n};\n*/\n\n/*::\ntype State = {\n  maxXRange: Array<number>,\n  mouseOver?: boolean,\n  mouseOverlayPos?: { [string]: number },\n  selectedDate: ?Date,\n  selectedDateXPos: ?number,\n  selectedDateIdx: ?number,\n  yScale: Scale,\n  xScale: Scale\n};\n*/\n\nexport default class AdvancedTimeline extends React.PureComponent {\n  /*:: props: Props; */\n  /*:: state: State; */\n\n  static defaultProps = {\n    eventSize: 8,\n    maxYTicksCount: 4,\n    padding: [10, 10, 30, 60],\n    zoomSpeed: 1\n  };\n\n  constructor(props /*: Props */) {\n    super(props);\n    const scales = this.getScales(props);\n    const selectedDatePos = this.getSelectedDatePos(scales.xScale, props.selectedDate);\n    this.state = { ...scales, ...selectedDatePos };\n    this.updateTooltipPos = throttle(this.updateTooltipPos, 40);\n    this.handleZoomUpdate = throttle(this.handleZoomUpdate, 40);\n  }\n\n  componentWillReceiveProps(nextProps /*: Props */) {\n    let scales;\n    let selectedDatePos;\n    if (\n      nextProps.metricType !== this.props.metricType ||\n      nextProps.startDate !== this.props.startDate ||\n      nextProps.endDate !== this.props.endDate ||\n      nextProps.width !== this.props.width ||\n      nextProps.padding !== this.props.padding ||\n      nextProps.height !== this.props.height ||\n      nextProps.series !== this.props.series\n    ) {\n      scales = this.getScales(nextProps);\n      if (this.state.selectedDate != null) {\n        selectedDatePos = this.getSelectedDatePos(scales.xScale, this.state.selectedDate);\n      }\n    }\n\n    if (!isEqual(nextProps.selectedDate, this.props.selectedDate)) {\n      const xScale = scales ? scales.xScale : this.state.xScale;\n      selectedDatePos = this.getSelectedDatePos(xScale, nextProps.selectedDate);\n    }\n\n    if (scales || selectedDatePos) {\n      this.setState({ ...(scales || {}), ...(selectedDatePos || {}) });\n\n      if (selectedDatePos && nextProps.updateTooltip) {\n        nextProps.updateTooltip(\n          selectedDatePos.selectedDate,\n          selectedDatePos.selectedDateXPos,\n          selectedDatePos.selectedDateIdx\n        );\n      }\n    }\n  }\n\n  getRatingScale = (availableHeight /*: number */) =>\n    scalePoint()\n      .domain([5, 4, 3, 2, 1])\n      .range([availableHeight, 0]);\n\n  getLevelScale = (availableHeight /*: number */) =>\n    scalePoint()\n      .domain(['ERROR', 'WARN', 'OK'])\n      .range([availableHeight, 0]);\n\n  getYScale = (props /*: Props */, availableHeight /*: number */, flatData /*: Array<Point> */) => {\n    if (props.metricType === 'RATING') {\n      return this.getRatingScale(availableHeight);\n    } else if (props.metricType === 'LEVEL') {\n      return this.getLevelScale(availableHeight);\n    } else {\n      return scaleLinear()\n        .range([availableHeight, 0])\n        .domain([0, max(flatData, d => d.y) || 1])\n        .nice();\n    }\n  };\n\n  getXScale = (\n    { startDate, endDate } /*: Props */,\n    availableWidth /*: number */,\n    flatData /*: Array<Point> */\n  ) => {\n    const dateRange = extent(flatData, d => d.x);\n    const start = startDate && startDate > dateRange[0] ? startDate : dateRange[0];\n    const end = endDate && endDate < dateRange[1] ? endDate : dateRange[1];\n    const xScale = scaleTime()\n      .domain(sortBy([start, end]))\n      .range([0, availableWidth])\n      .clamp(false);\n    return {\n      xScale,\n      maxXRange: dateRange.map(xScale)\n    };\n  };\n\n  getScales = (props /*: Props */) => {\n    const availableWidth = props.width - props.padding[1] - props.padding[3];\n    const availableHeight = props.height - props.padding[0] - props.padding[2];\n    const flatData = flatten(props.series.map((serie /*: Serie */) => serie.data));\n    return {\n      ...this.getXScale(props, availableWidth, flatData),\n      yScale: this.getYScale(props, availableHeight, flatData)\n    };\n  };\n\n  getSelectedDatePos = (xScale /*: Scale */, selectedDate /*: ?Date */) => {\n    const firstSerie = this.props.series[0];\n    if (selectedDate && firstSerie) {\n      const idx = firstSerie.data.findIndex(\n        // $FlowFixMe selectedDate can't be null there\n        p => p.x.valueOf() === selectedDate.valueOf()\n      );\n      const xRange = xScale.range().sort();\n      const xPos = xScale(selectedDate);\n      if (idx >= 0 && xPos >= xRange[0] && xPos <= xRange[1]) {\n        return {\n          selectedDate,\n          selectedDateXPos: xScale(selectedDate),\n          selectedDateIdx: idx\n        };\n      }\n    }\n    return { selectedDate: null, selectedDateXPos: null, selectedDateIdx: null };\n  };\n\n  getEventMarker = (size /*: number */) => {\n    const half = size / 2;\n    return `M${half} 0 L${size} ${half} L ${half} ${size} L0 ${half} L${half} 0 L${size} ${half}`;\n  };\n\n  getMouseOverlayPos = (target /*: HTMLElement */) => {\n    if (this.state.mouseOverlayPos) {\n      return this.state.mouseOverlayPos;\n    }\n    const pos = target.getBoundingClientRect();\n    this.setState({ mouseOverlayPos: pos });\n    return pos;\n  };\n\n  handleWheel = (evt /*: WheelEvent & { target: HTMLElement } */) => {\n    evt.preventDefault();\n    const { maxXRange, xScale } = this.state;\n    const parentBbox = this.getMouseOverlayPos(evt.target);\n    const mouseXPos = (evt.pageX - parentBbox.left) / parentBbox.width;\n    const xRange = xScale.range();\n    const speed = evt.deltaMode ? 25 / evt.deltaMode * this.props.zoomSpeed : this.props.zoomSpeed;\n    const leftPos = xRange[0] - Math.round(speed * evt.deltaY * mouseXPos);\n    const rightPos = xRange[1] + Math.round(speed * evt.deltaY * (1 - mouseXPos));\n    const startDate = leftPos > maxXRange[0] ? xScale.invert(leftPos) : null;\n    const endDate = rightPos < maxXRange[1] ? xScale.invert(rightPos) : null;\n    this.handleZoomUpdate(startDate, endDate);\n  };\n\n  handleZoomUpdate = (startDate /*: ?Date */, endDate /*: ?Date */) => {\n    if (this.props.updateZoom) {\n      this.props.updateZoom(startDate, endDate);\n    }\n  };\n\n  handleMouseMove = (evt /*: MouseEvent & { target: HTMLElement } */) => {\n    const parentBbox = this.getMouseOverlayPos(evt.target);\n    this.updateTooltipPos(evt.pageX - parentBbox.left);\n  };\n\n  handleMouseEnter = () => this.setState({ mouseOver: true });\n\n  handleMouseOut = (evt /*: Event & { relatedTarget: HTMLElement } */) => {\n    const { updateTooltip } = this.props;\n    if (updateTooltip) {\n      this.setState({\n        mouseOver: false,\n        selectedDate: null,\n        selectedDateXPos: null,\n        selectedDateIdx: null\n      });\n      updateTooltip(null, null, null);\n    }\n  };\n\n  handleClick = () => {\n    const { updateSelectedDate } = this.props;\n    if (updateSelectedDate) {\n      updateSelectedDate(this.state.selectedDate);\n    }\n  };\n\n  updateTooltipPos = (xPos /*: number */) => {\n    const firstSerie = this.props.series[0];\n    if (this.state.mouseOver && firstSerie) {\n      const { updateTooltip } = this.props;\n      const date = this.state.xScale.invert(xPos);\n      const bisectX = bisector(d => d.x).right;\n      let idx = bisectX(firstSerie.data, date);\n      if (idx >= 0) {\n        const previousPoint = firstSerie.data[idx - 1];\n        const nextPoint = firstSerie.data[idx];\n        if (!nextPoint || (previousPoint && date - previousPoint.x <= nextPoint.x - date)) {\n          idx--;\n        }\n        const selectedDate = firstSerie.data[idx].x;\n        const xPos = this.state.xScale(selectedDate);\n        this.setState({ selectedDate, selectedDateXPos: xPos, selectedDateIdx: idx });\n        if (updateTooltip) {\n          updateTooltip(selectedDate, xPos, idx);\n        }\n      }\n    }\n  };\n\n  renderHorizontalGrid = () => {\n    const { formatYTick } = this.props;\n    const { xScale, yScale } = this.state;\n    const hasTicks = typeof yScale.ticks === 'function';\n    let ticks = hasTicks ? yScale.ticks(this.props.maxYTicksCount) : yScale.domain();\n\n    if (!ticks.length) {\n      ticks.push(yScale.domain()[1]);\n    }\n\n    // if there are duplicated ticks, that means 4 ticks are too much for this data\n    // so let's just use the domain values (min and max)\n    if (formatYTick) {\n      const formattedTicks = ticks.map(tick => formatYTick(tick));\n      if (ticks.length > uniq(formattedTicks).length) {\n        ticks = yScale.domain();\n      }\n    }\n\n    return (\n      <g>\n        {ticks.map(tick => (\n          <g key={tick}>\n            {formatYTick != null && (\n              <text\n                className=\"line-chart-tick line-chart-tick-x\"\n                dx=\"-1em\"\n                dy=\"0.3em\"\n                textAnchor=\"end\"\n                x={xScale.range()[0]}\n                y={yScale(tick)}>\n                {formatYTick(tick)}\n              </text>\n            )}\n            <line\n              className=\"line-chart-grid\"\n              x1={xScale.range()[0]}\n              x2={xScale.range()[1]}\n              y1={yScale(tick)}\n              y2={yScale(tick)}\n            />\n          </g>\n        ))}\n      </g>\n    );\n  };\n\n  renderXAxisTicks = () => {\n    const { xScale, yScale } = this.state;\n    const format = xScale.tickFormat(7);\n    const ticks = xScale.ticks(7);\n    const y = yScale.range()[0];\n    return (\n      <g>\n        {ticks.slice(0, -1).map((tick, index) => {\n          const nextTick = index + 1 < ticks.length ? ticks[index + 1] : xScale.domain()[1];\n          const x = (xScale(tick) + xScale(nextTick)) / 2;\n          return (\n            <text key={index} className=\"line-chart-tick\" x={x} y={y} dy=\"1.5em\">\n              {format(tick)}\n            </text>\n          );\n        })}\n      </g>\n    );\n  };\n\n  renderLeak = () => {\n    const yRange = this.state.yScale.range();\n    const xRange = this.state.xScale.range();\n    const leakWidth = xRange[xRange.length - 1] - this.state.xScale(this.props.leakPeriodDate);\n    if (leakWidth < 0) {\n      return null;\n    }\n    return (\n      <rect\n        className=\"leak-chart-rect\"\n        x={this.state.xScale(this.props.leakPeriodDate)}\n        y={yRange[yRange.length - 1]}\n        width={leakWidth}\n        height={yRange[0] - yRange[yRange.length - 1]}\n        fill={theme.leakColor}\n      />\n    );\n  };\n\n  renderLines = () => {\n    const lineGenerator = d3Line()\n      .defined(d => d.y || d.y === 0)\n      .x(d => this.state.xScale(d.x))\n      .y(d => this.state.yScale(d.y));\n    if (this.props.basisCurve) {\n      lineGenerator.curve(curveBasis);\n    }\n    return (\n      <g>\n        {this.props.series.map((serie, idx) => (\n          <path\n            key={serie.name}\n            className={classNames('line-chart-path', 'line-chart-path-' + idx)}\n            d={lineGenerator(serie.data)}\n          />\n        ))}\n      </g>\n    );\n  };\n\n  renderAreas = () => {\n    const areaGenerator = area()\n      .defined(d => d.y || d.y === 0)\n      .x(d => this.state.xScale(d.x))\n      .y1(d => this.state.yScale(d.y))\n      .y0(this.state.yScale(0));\n    if (this.props.basisCurve) {\n      areaGenerator.curve(curveBasis);\n    }\n    return (\n      <g>\n        {this.props.series.map((serie, idx) => (\n          <path\n            key={serie.name}\n            className={classNames('line-chart-area', 'line-chart-area-' + idx)}\n            d={areaGenerator(serie.data)}\n          />\n        ))}\n      </g>\n    );\n  };\n\n  renderEvents = () => {\n    const { events, eventSize } = this.props;\n    if (!events || !eventSize) {\n      return null;\n    }\n    const { xScale, yScale } = this.state;\n    const inRangeEvents = events.filter(\n      event => event.date >= xScale.domain()[0] && event.date <= xScale.domain()[1]\n    );\n    const offset = eventSize / 2;\n    return (\n      <g>\n        {inRangeEvents.map((event, idx) => (\n          <path\n            d={this.getEventMarker(eventSize)}\n            className={classNames('line-chart-event', event.className)}\n            key={`${idx}-${event.date.getTime()}`}\n            transform={`translate(${xScale(event.date) - offset}, ${yScale.range()[0] + offset})`}\n          />\n        ))}\n      </g>\n    );\n  };\n\n  renderSelectedDate = () => {\n    const { selectedDateIdx, selectedDateXPos, yScale } = this.state;\n    const firstSerie = this.props.series[0];\n    if (selectedDateIdx == null || selectedDateXPos == null || !firstSerie) {\n      return null;\n    }\n\n    return (\n      <g>\n        <line\n          className=\"line-tooltip\"\n          x1={selectedDateXPos}\n          x2={selectedDateXPos}\n          y1={yScale.range()[0]}\n          y2={yScale.range()[1]}\n        />\n        {this.props.series.map((serie, idx) => {\n          const point = serie.data[selectedDateIdx];\n          if (!point || (!point.y && point.y !== 0)) {\n            return null;\n          }\n          return (\n            <circle\n              key={serie.name}\n              cx={selectedDateXPos}\n              cy={yScale(point.y)}\n              r=\"4\"\n              className={classNames('line-chart-dot', 'line-chart-dot-' + idx)}\n            />\n          );\n        })}\n      </g>\n    );\n  };\n\n  renderClipPath = () => {\n    return (\n      <defs>\n        <clipPath id=\"chart-clip\">\n          <rect\n            width={this.state.xScale.range()[1]}\n            height={this.state.yScale.range()[0] + 10}\n            transform=\"translate(0,-5)\"\n          />\n        </clipPath>\n      </defs>\n    );\n  };\n\n  renderMouseEventsOverlay = (zoomEnabled /*: boolean */) => {\n    const mouseEvents = {};\n    if (zoomEnabled) {\n      mouseEvents.onWheel = this.handleWheel;\n    }\n    if (this.props.updateTooltip) {\n      mouseEvents.onMouseEnter = this.handleMouseEnter;\n      mouseEvents.onMouseMove = this.handleMouseMove;\n      mouseEvents.onMouseOut = this.handleMouseOut;\n    }\n    if (this.props.updateSelectedDate) {\n      mouseEvents.onClick = this.handleClick;\n    }\n    return (\n      <rect\n        className=\"chart-mouse-events-overlay\"\n        width={this.state.xScale.range()[1]}\n        height={this.state.yScale.range()[0]}\n        {...mouseEvents}\n      />\n    );\n  };\n\n  render() {\n    if (!this.props.width || !this.props.height) {\n      return <div />;\n    }\n    const zoomEnabled = !this.props.disableZoom && this.props.updateZoom != null;\n    const isZoomed = this.props.startDate || this.props.endDate;\n    return (\n      <svg\n        className={classNames('line-chart', { 'chart-zoomed': isZoomed })}\n        width={this.props.width}\n        height={this.props.height}>\n        {zoomEnabled && this.renderClipPath()}\n        <g transform={`translate(${this.props.padding[3]}, ${this.props.padding[0]})`}>\n          {this.props.leakPeriodDate != null && this.renderLeak()}\n          {!this.props.hideGrid && this.renderHorizontalGrid()}\n          {!this.props.hideXAxis && this.renderXAxisTicks()}\n          {this.props.showAreas && this.renderAreas()}\n          {this.renderLines()}\n          {this.props.showEventMarkers && this.renderEvents()}\n          {this.renderSelectedDate()}\n          {this.renderMouseEventsOverlay(zoomEnabled)}\n        </g>\n      </svg>\n    );\n  }\n}\n","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".line-chart-path{fill:none;stroke:#4b9fd5;stroke-width:2px}.line-chart-path.line-chart-path-1{stroke:#236a97}.line-chart-path.line-chart-path-2{stroke:#24c6e0}.line-chart-area{fill:rgba(75,159,213,.3);stroke-width:0}.line-chart-area.line-chart-area-1{fill:rgba(35,106,151,.3)}.line-chart-area.line-chart-area-2{fill:rgba(36,198,224,.3)}.line-chart-point{fill:#fff;stroke:#4b9fd5;stroke-width:2px}.line-chart-tick{fill:#777;font-size:12px;text-anchor:middle}.line-chart-tick-x{text-anchor:end}.line-chart-tick-x-right{text-anchor:start}.line-chart-grid{shape-rendering:crispedges;stroke:#eee}\", \"\"]);\n\n// exports\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n// @flow\nimport { chunk, flatMap, groupBy, isEqual, sortBy } from 'lodash';\nimport {\n  cleanQuery,\n  parseAsArray,\n  parseAsDate,\n  parseAsString,\n  serializeStringArray,\n  serializeDate,\n  serializeString\n} from '../../helpers/query';\nimport { parseDate, startOfDay } from '../../helpers/dates';\nimport { getLocalizedMetricName, translate } from '../../helpers/l10n';\n/*:: import type { Analysis, MeasureHistory, Metric, Query } from './types'; */\n/*:: import type { RawQuery } from '../../helpers/query'; */\n/*:: import type { Serie } from '../../components/charts/AdvancedTimeline'; */\n\nexport const EVENT_TYPES = ['VERSION', 'QUALITY_GATE', 'QUALITY_PROFILE', 'OTHER'];\nexport const APPLICATION_EVENT_TYPES = ['QUALITY_GATE', 'OTHER'];\nexport const DEFAULT_GRAPH = 'issues';\nexport const GRAPH_TYPES = ['issues', 'coverage', 'duplications', 'custom'];\nexport const GRAPHS_METRICS_DISPLAYED = {\n  issues: ['bugs', 'code_smells', 'vulnerabilities'],\n  coverage: ['lines_to_cover', 'uncovered_lines'],\n  duplications: ['ncloc', 'duplicated_lines']\n};\nexport const GRAPHS_METRICS = {\n  issues: GRAPHS_METRICS_DISPLAYED['issues'].concat([\n    'reliability_rating',\n    'security_rating',\n    'sqale_rating'\n  ]),\n  coverage: GRAPHS_METRICS_DISPLAYED['coverage'].concat(['coverage']),\n  duplications: GRAPHS_METRICS_DISPLAYED['duplications'].concat(['duplicated_lines_density'])\n};\n\nexport const PROJECT_ACTIVITY_GRAPH = 'sonarqube.project_activity.graph';\nexport const PROJECT_ACTIVITY_GRAPH_CUSTOM = 'sonarqube.project_activity.graph.custom';\n\nexport const datesQueryChanged = (prevQuery /*: Query */, nextQuery /*: Query */) =>\n  !isEqual(prevQuery.from, nextQuery.from) || !isEqual(prevQuery.to, nextQuery.to);\n\nexport const activityQueryChanged = (prevQuery /*: Query */, nextQuery /*: Query */) =>\n  prevQuery.category !== nextQuery.category || datesQueryChanged(prevQuery, nextQuery);\n\nexport const customMetricsChanged = (prevQuery /*: Query */, nextQuery /*: Query */) =>\n  !isEqual(prevQuery.customMetrics, nextQuery.customMetrics);\n\nexport const hasDataValues = (serie /*: Serie */) =>\n  serie.data.some(point => point.y || point.y === 0);\n\nexport const hasHistoryData = (series /*: Array<Serie> */) =>\n  series.some(serie => serie.data && serie.data.length > 1);\n\nexport const hasHistoryDataValue = (series /*: Array<Serie> */) =>\n  series.some(serie => serie.data && serie.data.length > 1 && hasDataValues(serie));\n\nexport function historyQueryChanged(prevQuery /*: Query */, nextQuery /*: Query */) /*: boolean */ {\n  return prevQuery.graph !== nextQuery.graph;\n}\n\nexport const isCustomGraph = (graph /*: string */) => graph === 'custom';\n\nexport const selectedDateQueryChanged = (prevQuery /*: Query */, nextQuery /*: Query */) =>\n  !isEqual(prevQuery.selectedDate, nextQuery.selectedDate);\n\nexport const generateCoveredLinesMetric = (\n  uncoveredLines /*: MeasureHistory */,\n  measuresHistory /*: Array<MeasureHistory> */\n) => {\n  const linesToCover = measuresHistory.find(measure => measure.metric === 'lines_to_cover');\n  return {\n    data: linesToCover\n      ? uncoveredLines.history.map((analysis, idx) => ({\n          x: analysis.date,\n          y: Number(linesToCover.history[idx].value) - Number(analysis.value)\n        }))\n      : [],\n    name: 'covered_lines',\n    translatedName: translate('project_activity.custom_metric.covered_lines'),\n    type: 'INT'\n  };\n};\n\nfunction findMetric(key /*: string */, metrics /*:  Array<Metric> | { [string]: Metric } */) {\n  if (Array.isArray(metrics)) {\n    return metrics.find(metric => metric.key === key);\n  }\n  return metrics[key];\n}\n\nexport function generateSeries(\n  measuresHistory /*: Array<MeasureHistory> */,\n  graph /*: string */,\n  metrics /*:  Array<Metric> | { [string]: Metric } */,\n  displayedMetrics /*: Array<string> */\n) /*: Array<Serie> */ {\n  if (displayedMetrics.length <= 0 || typeof measuresHistory === 'undefined') {\n    return [];\n  }\n  return sortBy(\n    measuresHistory\n      .filter(measure => displayedMetrics.indexOf(measure.metric) >= 0)\n      .map(measure => {\n        if (measure.metric === 'uncovered_lines' && !isCustomGraph(graph)) {\n          return generateCoveredLinesMetric(measure, measuresHistory);\n        }\n        const metric = findMetric(measure.metric, metrics);\n        return {\n          data: measure.history.map(analysis => ({\n            x: analysis.date,\n            y: metric && metric.type === 'LEVEL' ? analysis.value : Number(analysis.value)\n          })),\n          name: measure.metric,\n          translatedName: metric ? getLocalizedMetricName(metric) : measure.metric,\n          type: metric ? metric.type : 'INT'\n        };\n      }),\n    serie =>\n      displayedMetrics.indexOf(serie.name === 'covered_lines' ? 'uncovered_lines' : serie.name)\n  );\n}\n\nexport const splitSeriesInGraphs = (\n  series /*: Array<Serie> */,\n  maxGraph /*: number */,\n  maxSeries /*: number */\n) =>\n  flatMap(groupBy(series, serie => serie.type), type => chunk(type, maxSeries)).slice(0, maxGraph);\n\nexport const getSeriesMetricType = (series /*: Array<Serie> */) =>\n  series.length > 0 ? series[0].type : 'INT';\n\nexport function getAnalysesByVersionByDay(analyses /*: Array<Analysis> */, query /*: Query */) {\n  return analyses.reduce((acc, analysis) => {\n    let currentVersion = acc[acc.length - 1];\n    const versionEvent = analysis.events.find(event => event.category === 'VERSION');\n    if (versionEvent) {\n      const newVersion = { version: versionEvent.name, key: versionEvent.key, byDay: {} };\n      if (!currentVersion || Object.keys(currentVersion.byDay).length > 0) {\n        acc.push(newVersion);\n      } else {\n        acc[acc.length - 1] = newVersion;\n      }\n      currentVersion = newVersion;\n    } else if (!currentVersion) {\n      // APPs don't have version events, so let's create a fake one\n      currentVersion = { version: null, key: null, byDay: {} };\n      acc.push(currentVersion);\n    }\n\n    const day = startOfDay(parseDate(analysis.date))\n      .getTime()\n      .toString();\n\n    let matchFilters = true;\n    if (query.category || query.from || query.to) {\n      const isAfterFrom = !query.from || analysis.date >= query.from;\n      const isBeforeTo = !query.to || analysis.date <= query.to;\n      const hasSelectedCategoryEvents =\n        !query.category || analysis.events.find(event => event.category === query.category) != null;\n      matchFilters = isAfterFrom && isBeforeTo && hasSelectedCategoryEvents;\n    }\n\n    if (matchFilters) {\n      if (!currentVersion.byDay[day]) {\n        currentVersion.byDay[day] = [];\n      }\n      currentVersion.byDay[day].push(analysis);\n    }\n    return acc;\n  }, []);\n}\n\nexport const getDisplayedHistoryMetrics = (\n  graph /*: string */,\n  customMetrics /*: Array<string> */\n) => (isCustomGraph(graph) ? customMetrics : GRAPHS_METRICS_DISPLAYED[graph]);\n\nexport const getHistoryMetrics = (graph /*: string */, customMetrics /*: Array<string> */) =>\n  isCustomGraph(graph) ? customMetrics : GRAPHS_METRICS[graph];\n\nconst parseGraph = (value /*: ?string */) => {\n  const graph = parseAsString(value);\n  return GRAPH_TYPES.includes(graph) ? graph : DEFAULT_GRAPH;\n};\n\nconst serializeGraph = (value /*: string */) => (value === DEFAULT_GRAPH ? undefined : value);\n\nexport function parseQuery(urlQuery /*: RawQuery */) /*: Query */ {\n  return {\n    category: parseAsString(urlQuery['category']),\n    customMetrics: parseAsArray(urlQuery['custom_metrics'], parseAsString),\n    from: parseAsDate(urlQuery['from']),\n    graph: parseGraph(urlQuery['graph']),\n    project: parseAsString(urlQuery['id']),\n    to: parseAsDate(urlQuery['to']),\n    selectedDate: parseAsDate(urlQuery['selected_date'])\n  };\n}\n\nexport function serializeQuery(query /*: Query */) /*: RawQuery */ {\n  return cleanQuery({\n    category: serializeString(query.category),\n    from: serializeDate(query.from),\n    project: serializeString(query.project),\n    to: serializeDate(query.to)\n  });\n}\n\nexport function serializeUrlQuery(query /*: Query */) /*: RawQuery */ {\n  return cleanQuery({\n    category: serializeString(query.category),\n    custom_metrics: serializeStringArray(query.customMetrics),\n    from: serializeDate(query.from),\n    graph: serializeGraph(query.graph),\n    id: serializeString(query.project),\n    to: serializeDate(query.to),\n    selected_date: serializeDate(query.selectedDate)\n  });\n}\n"],"sourceRoot":""}