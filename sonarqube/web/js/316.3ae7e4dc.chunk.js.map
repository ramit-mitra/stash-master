{"version":3,"sources":["webpack:///./src/main/js/components/common/StatusIndicator.css","webpack:///./src/main/js/components/common/StatusIndicator.css?f495","webpack:///./src/main/js/components/common/StatusIndicator.tsx","webpack:///./src/main/js/components/common/RestartForm.tsx","webpack:///./src/main/js/components/controls/BoxedGroupAccordion.tsx","webpack:///./src/main/js/apps/system/styles.css","webpack:///./src/main/js/apps/system/styles.css?a385","webpack:///./node_modules/lodash/_castFunction.js","webpack:///./node_modules/lodash/_arrayEach.js","webpack:///./node_modules/lodash/forEach.js","webpack:///./node_modules/lodash/each.js","webpack:///./src/main/js/apps/system/components/info-items/HealthCauseItem.tsx","webpack:///./src/main/js/apps/system/components/info-items/HealthItem.tsx","webpack:///./src/main/js/apps/system/utils.ts","webpack:///./src/main/js/apps/system/components/info-items/SysInfoItem.tsx","webpack:///./src/main/js/apps/system/components/info-items/Section.tsx","webpack:///./src/main/js/apps/system/components/info-items/HealthCard.tsx","webpack:///./src/main/js/apps/system/components/ClusterSysInfos.tsx","webpack:///./src/main/js/apps/system/components/ChangeLogLevelForm.tsx","webpack:///./src/main/js/apps/system/components/PageActions.tsx","webpack:///./src/main/js/apps/system/components/PageHeader.tsx","webpack:///./src/main/js/apps/system/components/StandaloneSysInfos.tsx","webpack:///./src/main/js/apps/system/components/system-upgrade/SystemUpgradeIntermediate.tsx","webpack:///./src/main/js/apps/system/components/system-upgrade/SystemUpgradeItem.tsx","webpack:///./src/main/js/apps/system/components/system-upgrade/SystemUpgradeForm.tsx","webpack:///./src/main/js/apps/system/components/system-upgrade/SystemUpgradeNotif.tsx","webpack:///./src/main/js/apps/system/components/App.tsx","webpack:///./src/main/js/app/components/embed-docs-modal/Suggestions.tsx","webpack:///./node_modules/lodash/map.js","webpack:///./node_modules/lodash/groupBy.js","webpack:///./src/main/js/components/icons-components/ChevronRightcon.tsx","webpack:///./src/main/js/api/system.ts","webpack:///./src/main/js/components/icons-components/ChevronDownIcon.tsx","webpack:///./src/main/js/components/icons-components/OpenCloseIcon.tsx"],"names":["module","exports","__webpack_require__","push","i","content","options","hmr","transform","insertInto","undefined","locals","StatusIndicator","_a","className","color","size","react__WEBPACK_IMPORTED_MODULE_0__","classnames__WEBPACK_IMPORTED_MODULE_1__","small-status-indicator","big-status-indicator","RestartForm","_super","_this","apply","this","arguments","state","restarting","handleFormSubmit","event","preventDefault","setState","Object","_api_system__WEBPACK_IMPORTED_MODULE_2__","then","document","location","reload","__extends","prototype","render","header","_helpers_l10n__WEBPACK_IMPORTED_MODULE_5__","_components_controls_Modal__WEBPACK_IMPORTED_MODULE_3__","contentLabel","onRequestClose","props","onClose","id","onSubmit","text-center","_ui_buttons__WEBPACK_IMPORTED_MODULE_4__","onClick","BoxedGroupAccordion","hoveringInner","handleClick","data","onDetailEnter","onDetailLeave","open","renderHeader","title","no-hover","role","_icons_components_OpenCloseIcon__WEBPACK_IMPORTED_MODULE_2__","onMouseEnter","onMouseLeave","children","value","array","iteratee","index","length","arrayEach","baseEach","castFunction","isArray","collection","HealthCauseItem","health","healthCause","index_js_exposed","classnames","system","RED","HealthItem","biggerHealth","name","healthCauses","hasHealthCauses","GREEN","statusIndicator","toLowerCase","map","cause","idx","key","Tooltip","overlay","l10n","LOGS_LEVELS","HA_FIELD","HEALTH_FIELD","HEALTHCAUSES_FIELD","PLUGINS_FIELD","SETTINGS_FIELD","ignoreInfoFields","sysInfoObject","omit_default","getHealth","getHealthCauses","getLogsLevel","sortBy_default","logLevel","indexOf","getAppNodes","sysInfoData","isCluster","getNodeName","nodeInfo","getSystemData","statData","statistics","measures","__assign","parseQuery","memoize_default","urlQuery","expandedCards","helpers_query","expand","serializeQuery","query","SysInfoItem","Array","JSON","stringify","SysInfoItem_typeof","BooleanItem","ObjectItem","AlertSuccessIcon","AlertErrorIcon","map_default","Section","items","style","wordBreak","HealthCard","_b","mainSection","sections","each_default","item","_typeof","groupSections","showFields","keys","showSections","showLogLevelWarning","section","ClusterSysInfos","toggleCard","includes","getClusterMainCardSection","node","getSearchNodes","ChangeLogLevelForm","call","newLevel","updating","onChange","handleLevelChange","currentTarget","Modal","level","checked","type","htmlFor","infoMsg","buttons","disabled","PageActions","handleLogsLevelOpen","openLogsLevelForm","handleLogsLevelChange","onLogLevelChange","handleLogsLevelClose","handleServerRestartOpen","openRestartForm","handleServerRestartClose","removeElementFocus","blur","PageActions_extends","componentWillReceiveProps","nextProps","suffix","now","infoUrl","urls","logsUrl","canDownloadLogs","Dropdown","download","href","target","DropdownIcon","serverId","Date","getFullYear","getMonth","getDate","getHours","getMinutes","canRestart","components_ChangeLogLevelForm","cluster","PageHeader","showActions","components_PageActions","loading","StandAloneSysInfos","omitBy_default","startsWith","getStandaloneMainSections","Web","pickBy_default","_","Compute Engine","Search Engine","getStandaloneSecondarySections","SystemUpgradeIntermediate","showMore","toggleIntermediatVersions","stopPropagation","SystemUpgradeIntermediate_extends","upgrades","turned","upgrade","version","DateFormatter","date","releaseDate","long","formattedDate","changeLogUrl","description","SystemUpgradeItem","systemUpgrades","lastUpgrade","index_es","defaultMessage","values","system_upgrade_SystemUpgradeIntermediate","slice","downloadUrl","SystemUpgradeForm","upgrading","handleCancelClick","SystemUpgradeForm_extends","SystemUpgradeNotif","mounted","openSystemUpgradeForm","fetchSystemUpgrade","groupedVersions","groupBy_default","split","Number","groupUpgrades","sortUpgrades","handleOpenSystemUpgradeForm","handleCloseSystemUpgradeForm","SystemUpgradeNotif_extends","componentDidMount","componentWillUnmount","system_upgrade_SystemUpgradeForm","App_App","App","fetchSysInfo","toggleSysInfoCards","toggledCard","filter","card","concat","updateQuery","newQuery","App_assign","context","router","replace","pathname","App_extends","renderSysInfo","Suggestions","suggestions","Helmet_default","a","system_upgrade_SystemUpgradeNotif","defaultLevel","logLevels","getSystemLogsLevel","getServerId","contextTypes","prop_types","addSuggestions","componentDidUpdate","prevProps","removeSuggestions","prop_types__WEBPACK_IMPORTED_MODULE_1__","isRequired","arrayMap","baseIteratee","baseMap","baseAssignValue","createAggregator","hasOwnProperty","groupBy","result","ChevronRightIcon","fill","_Icon__WEBPACK_IMPORTED_MODULE_1__","d","HealthType","setLogLevel","_helpers_request__WEBPACK_IMPORTED_MODULE_0__","catch","_app_utils_throwGlobalError__WEBPACK_IMPORTED_MODULE_1__","getSystemInfo","getSystemStatus","getSystemUpgrades","getMigrationStatus","migrateDatabase","POLLING_INTERVAL","promiseStatus","Promise","resolve","pollStatus","cb","setTimeout","r","status","restartAndWait","ChevronDownIcon","Icon","OpenCloseIcon","__rest","ChevronRightcon"],"mappings":"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","file":"js/316.3ae7e4dc.chunk.js","sourcesContent":["exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".status-indicator{display:inline-block;box-sizing:border-box;width:16px;height:16px;border-radius:16px;margin:4px}.status-indicator.small-status-indicator{width:8px;height:8px;border-radius:8px;margin:8px}.status-indicator.big-status-indicator{width:24px;height:24px;border-radius:24px;margin:0}.status-indicator.red{background-color:#d4333f}.status-indicator.yellow{background-color:#eabe06}.status-indicator.green{background-color:#0a0}.status-indicator.orange{background-color:#ed7d20}.status-indicator.gray{background-color:#b4b4b4}\", \"\"]);\n\n// exports\n","\nvar content = require(\"!!../../../../../node_modules/css-loader/index.js??ref--6-1!../../../../../node_modules/postcss-loader/lib/index.js??postcss!./StatusIndicator.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/index.js??ref--6-1!../../../../../node_modules/postcss-loader/lib/index.js??postcss!./StatusIndicator.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/index.js??ref--6-1!../../../../../node_modules/postcss-loader/lib/index.js??postcss!./StatusIndicator.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport './StatusIndicator.css';\n\ninterface Props {\n  className?: string;\n  color?: string;\n  size?: string;\n}\n\nexport default function StatusIndicator({ className, color, size }: Props) {\n  return (\n    <i\n      className={classNames(\n        'status-indicator',\n        color,\n        {\n          'small-status-indicator': size === 'small',\n          'big-status-indicator': size === 'big'\n        },\n        className\n      )}\n    />\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport { restartAndWait } from '../../api/system';\nimport Modal from '../../components/controls/Modal';\nimport { SubmitButton, ResetButtonLink } from '../ui/buttons';\nimport { translate } from '../../helpers/l10n';\n\ninterface Props {\n  onClose: () => void;\n}\n\ninterface State {\n  restarting: boolean;\n}\n\nexport default class RestartForm extends React.PureComponent<Props, State> {\n  state: State = { restarting: false };\n\n  handleFormSubmit = (event: React.SyntheticEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    if (!this.state.restarting) {\n      this.setState({ restarting: true });\n      restartAndWait().then(\n        () => document.location.reload(),\n        () => this.setState({ restarting: false })\n      );\n    }\n  };\n\n  render() {\n    const { restarting } = this.state;\n    const header = translate('system.restart_server');\n    return (\n      <Modal contentLabel={header} onRequestClose={restarting ? undefined : this.props.onClose}>\n        <form id=\"restart-form\" onSubmit={this.handleFormSubmit}>\n          <div className=\"modal-head\">\n            <h2>{header}</h2>\n          </div>\n          <div className=\"modal-body\">\n            <p className={classNames('spacer-top spacer-bottom', { 'text-center': restarting })}>\n              {translate(restarting ? 'system.is_restarting' : 'system.are_you_sure_to_restart')}\n            </p>\n            {restarting && (\n              <p className=\"big-spacer-top spacer-bottom text-center\">\n                <i className=\"spinner\" />\n              </p>\n            )}\n          </div>\n          {!restarting && (\n            <div className=\"modal-foot\">\n              <SubmitButton id=\"restart-server-submit\">{translate('restart')}</SubmitButton>\n              <ResetButtonLink\n                className=\"js-modal-close\"\n                id=\"restart-server-cancel\"\n                onClick={this.props.onClose}>\n                {translate('cancel')}\n              </ResetButtonLink>\n            </div>\n          )}\n        </form>\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport OpenCloseIcon from '../icons-components/OpenCloseIcon';\n\ninterface Props {\n  children: React.ReactNode;\n  className?: string;\n  data?: string;\n  onClick: (data?: string) => void;\n  open: boolean;\n  renderHeader?: () => React.ReactNode;\n  title: React.ReactNode;\n}\n\ninterface State {\n  hoveringInner: boolean;\n}\n\nexport default class BoxedGroupAccordion extends React.PureComponent<Props, State> {\n  state: State = { hoveringInner: false };\n\n  handleClick = () => {\n    this.props.onClick(this.props.data);\n  };\n\n  onDetailEnter = () => {\n    this.setState({ hoveringInner: true });\n  };\n\n  onDetailLeave = () => {\n    this.setState({ hoveringInner: false });\n  };\n\n  render() {\n    const { className, open, renderHeader, title } = this.props;\n    return (\n      <div\n        className={classNames('boxed-group boxed-group-accordion', className, {\n          'no-hover': this.state.hoveringInner\n        })}>\n        <div className=\"boxed-group-header\" onClick={this.handleClick} role=\"listitem\">\n          <span className=\"boxed-group-accordion-title\">\n            <OpenCloseIcon className=\"little-spacer-right\" open={open} />\n            {title}\n          </span>\n          {renderHeader && renderHeader()}\n        </div>\n        {open && (\n          <div\n            className=\"boxed-group-inner\"\n            onMouseEnter={this.onDetailEnter}\n            onMouseLeave={this.onDetailLeave}>\n            {this.props.children}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".system-info-health-title{margin-top:24px;margin-bottom:16px}.system-info-health-info{margin-top:-12px}.system-info-health-info .status-indicator{position:relative;top:8px}.system-info-health-info .alert{display:inline-block}.system-info-health-info.no-margin .status-indicator{margin:0}.system-info-section~.system-info-section{margin-top:16px}.system-info-section-item-name{width:25vw;overflow:hidden;text-overflow:ellipsis}.system-upgrade-version{padding:8px}.system-upgrade-version~.system-upgrade-version{margin-top:10px;padding-top:18px;border-top:1px solid #e6e6e6}.system-upgrade-intermediate{padding:6px 10px}\", \"\"]);\n\n// exports\n","\nvar content = require(\"!!../../../../../node_modules/css-loader/index.js??ref--6-1!../../../../../node_modules/postcss-loader/lib/index.js??postcss!./styles.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/index.js??ref--6-1!../../../../../node_modules/postcss-loader/lib/index.js??postcss!./styles.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/index.js??ref--6-1!../../../../../node_modules/postcss-loader/lib/index.js??postcss!./styles.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n","/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nmodule.exports = arrayEach;\n","var arrayEach = require('./_arrayEach'),\n    baseEach = require('./_baseEach'),\n    castFunction = require('./_castFunction'),\n    isArray = require('./isArray');\n\n/**\n * Iterates over elements of `collection` and invokes `iteratee` for each element.\n * The iteratee is invoked with three arguments: (value, index|key, collection).\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n * property are iterated like arrays. To avoid this behavior use `_.forIn`\n * or `_.forOwn` for object iteration.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @alias each\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n * @see _.forEachRight\n * @example\n *\n * _.forEach([1, 2], function(value) {\n *   console.log(value);\n * });\n * // => Logs `1` then `2`.\n *\n * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n *   console.log(key);\n * });\n * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n */\nfunction forEach(collection, iteratee) {\n  var func = isArray(collection) ? arrayEach : baseEach;\n  return func(collection, castFunction(iteratee));\n}\n\nmodule.exports = forEach;\n","module.exports = require('./forEach');\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport { HealthType } from '../../../../api/system';\n\ninterface Props {\n  className?: string;\n  health: HealthType;\n  healthCause: string;\n}\n\nexport default function HealthCauseItem({ className, health, healthCause }: Props) {\n  return (\n    <span\n      className={classNames(\n        'alert',\n        health === HealthType.RED ? 'alert-danger' : 'alert-warning',\n        className\n      )}>\n      {healthCause}\n    </span>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport HealthCauseItem from './HealthCauseItem';\nimport StatusIndicator from '../../../../components/common/StatusIndicator';\nimport Tooltip from '../../../../components/controls/Tooltip';\nimport { HealthType } from '../../../../api/system';\nimport { translateWithParameters } from '../../../../helpers/l10n';\n\ninterface Props {\n  biggerHealth?: boolean;\n  name?: string;\n  className?: string;\n  health: HealthType;\n  healthCauses?: string[];\n}\n\nexport default function HealthItem({ biggerHealth, className, name, health, healthCauses }: Props) {\n  const hasHealthCauses = healthCauses && healthCauses.length > 0 && health !== HealthType.GREEN;\n  const statusIndicator = (\n    <StatusIndicator color={health.toLowerCase()} size={biggerHealth ? 'big' : undefined} />\n  );\n  return (\n    <div className={classNames('system-info-health-info', className)}>\n      {hasHealthCauses &&\n        healthCauses!.map((cause, idx) => (\n          <HealthCauseItem key={idx} className=\"spacer-right\" health={health} healthCause={cause} />\n        ))}\n      {name ? (\n        <Tooltip overlay={translateWithParameters('system.current_health_of_x', name)}>\n          <span>{statusIndicator}</span>\n        </Tooltip>\n      ) : (\n        statusIndicator\n      )}\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { each, groupBy, memoize, omit, omitBy, pickBy, sortBy } from 'lodash';\nimport {\n  cleanQuery,\n  parseAsArray,\n  parseAsString,\n  RawQuery,\n  serializeStringArray\n} from '../../helpers/query';\nimport {\n  ClusterSysInfo,\n  HealthType,\n  NodeInfo,\n  SysInfo,\n  SysInfoSection,\n  SysValueObject,\n  SystemUpgrade\n} from '../../api/system';\nimport { formatMeasure } from '../../helpers/measures';\n\nexport interface Query {\n  expandedCards: string[];\n}\n\nexport const LOGS_LEVELS = ['INFO', 'DEBUG', 'TRACE'];\nexport const HA_FIELD = 'High Availability';\nexport const HEALTH_FIELD = 'Health';\nexport const HEALTHCAUSES_FIELD = 'Health Causes';\nexport const PLUGINS_FIELD = 'Plugins';\nexport const SETTINGS_FIELD = 'Settings';\n\nexport function ignoreInfoFields(sysInfoObject: SysValueObject): SysValueObject {\n  return omit(sysInfoObject, [\n    HEALTH_FIELD,\n    HEALTHCAUSES_FIELD,\n    'Name',\n    PLUGINS_FIELD,\n    SETTINGS_FIELD\n  ]) as SysValueObject;\n}\n\nexport function getHealth(sysInfoObject: SysValueObject): HealthType {\n  return sysInfoObject[HEALTH_FIELD] as HealthType;\n}\n\nexport function getHealthCauses(sysInfoObject: SysValueObject): string[] {\n  return sysInfoObject[HEALTHCAUSES_FIELD] as string[];\n}\n\nexport function getLogsLevel(sysInfoObject?: SysValueObject): string {\n  if (!sysInfoObject) {\n    return LOGS_LEVELS[0];\n  }\n  if (sysInfoObject['Web Logging'] || sysInfoObject['Compute Engine Logging']) {\n    return sortBy(\n      [\n        getLogsLevel((sysInfoObject as NodeInfo)['Web Logging']),\n        getLogsLevel((sysInfoObject as NodeInfo)['Compute Engine Logging'])\n      ],\n      logLevel => LOGS_LEVELS.indexOf(logLevel)\n    )[1];\n  }\n  if (sysInfoObject['System']) {\n    return getLogsLevel((sysInfoObject as SysInfo)['System']);\n  }\n  return (sysInfoObject['Logs Level'] || LOGS_LEVELS[0]) as string;\n}\n\nexport function getAppNodes(sysInfoData: ClusterSysInfo): NodeInfo[] {\n  return sysInfoData['Application Nodes'];\n}\n\nexport function getSearchNodes(sysInfoData: ClusterSysInfo): NodeInfo[] {\n  return sysInfoData['Search Nodes'];\n}\n\nexport function isCluster(sysInfoData?: SysInfo): boolean {\n  return (\n    sysInfoData !== undefined && sysInfoData['System'] && sysInfoData['System'][HA_FIELD] === true\n  );\n}\n\nexport function getServerId(sysInfoData?: SysInfo): string | undefined {\n  return sysInfoData && sysInfoData['System']['Server ID'];\n}\n\nexport function getSystemLogsLevel(sysInfoData?: SysInfo): string {\n  const defaultLevel = LOGS_LEVELS[0];\n  if (!sysInfoData) {\n    return defaultLevel;\n  }\n  if (isCluster(sysInfoData)) {\n    const logLevels = sortBy(\n      getAppNodes(sysInfoData as ClusterSysInfo).map(getLogsLevel),\n      logLevel => LOGS_LEVELS.indexOf(logLevel)\n    );\n    return logLevels.length > 0 ? logLevels[logLevels.length - 1] : defaultLevel;\n  } else {\n    return getLogsLevel(sysInfoData);\n  }\n}\n\nexport function getNodeName(nodeInfo: NodeInfo): string {\n  return nodeInfo['Name'];\n}\n\nfunction getSystemData(sysInfoData: SysInfo): SysValueObject {\n  const statData: SysValueObject = {};\n  const statistics = sysInfoData['Statistics'] as SysValueObject;\n  if (statistics) {\n    statData['Lines of Code'] = formatMeasure(statistics['ncloc'] as number, 'INT');\n  }\n  return { ...sysInfoData['System'], ...statData };\n}\n\nexport function getClusterMainCardSection(sysInfoData: ClusterSysInfo): SysValueObject {\n  return {\n    ...getSystemData(sysInfoData),\n    ...(omit(sysInfoData, [\n      'Application Nodes',\n      PLUGINS_FIELD,\n      'Search Nodes',\n      SETTINGS_FIELD,\n      'Statistics',\n      'System'\n    ]) as SysValueObject)\n  };\n}\n\nexport function getStandaloneMainSections(sysInfoData: SysInfo): SysValueObject {\n  return {\n    ...getSystemData(sysInfoData),\n    ...(omitBy(\n      sysInfoData,\n      (value, key) =>\n        value == null ||\n        [PLUGINS_FIELD, SETTINGS_FIELD, 'Statistics', 'System'].includes(key) ||\n        key.startsWith('Compute Engine') ||\n        key.startsWith('Search') ||\n        key.startsWith('Web')\n    ) as SysValueObject)\n  };\n}\n\nexport function getStandaloneSecondarySections(sysInfoData: SysInfo): SysInfoSection {\n  return {\n    Web: pickBy(sysInfoData, (_, key) => key.startsWith('Web')) as SysValueObject,\n    'Compute Engine': pickBy(sysInfoData, (_, key) =>\n      key.startsWith('Compute Engine')\n    ) as SysValueObject,\n    'Search Engine': pickBy(sysInfoData, (_, key) => key.startsWith('Search')) as SysValueObject\n  };\n}\n\nexport function getFileNameSuffix(suffix?: string) {\n  const now = new Date();\n  return (\n    `${suffix ? suffix + '-' : ''}` +\n    `${now.getFullYear()}-${now.getMonth() + 1}-` +\n    `${now.getDate()}-${now.getHours()}-${now.getMinutes()}`\n  );\n}\n\nexport function groupSections(sysInfoData: SysValueObject) {\n  const mainSection: SysValueObject = {};\n  const sections: SysInfoSection = {};\n  each(sysInfoData, (item, key) => {\n    if (typeof item !== 'object' || item instanceof Array) {\n      mainSection[key] = item;\n    } else {\n      sections[key] = item;\n    }\n  });\n  return { mainSection, sections };\n}\n\nexport const parseQuery = memoize((urlQuery: RawQuery): Query => ({\n  expandedCards: parseAsArray(urlQuery.expand, parseAsString)\n}));\n\nexport const serializeQuery = memoize((query: Query): RawQuery =>\n  cleanQuery({\n    expand: serializeStringArray(query.expandedCards)\n  })\n);\n\nexport function sortUpgrades(upgrades: SystemUpgrade[]): SystemUpgrade[] {\n  return sortBy(upgrades, [\n    (upgrade: SystemUpgrade) => -Number(upgrade.version.split('.')[0]),\n    (upgrade: SystemUpgrade) => -Number(upgrade.version.split('.')[1] || 0),\n    (upgrade: SystemUpgrade) => -Number(upgrade.version.split('.')[2] || 0)\n  ]);\n}\n\nexport function groupUpgrades(upgrades: SystemUpgrade[]): SystemUpgrade[][] {\n  const groupedVersions = groupBy(upgrades, upgrade => upgrade.version.split('.')[0]);\n  const sortedMajor = sortBy(Object.keys(groupedVersions), key => -Number(key));\n  return sortedMajor.map(key => groupedVersions[key]);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { map } from 'lodash';\nimport HealthItem from './HealthItem';\nimport AlertErrorIcon from '../../../../components/icons-components/AlertErrorIcon';\nimport AlertSuccessIcon from '../../../../components/icons-components/AlertSuccessIcon';\nimport { HealthType, SysValue, SysValueObject } from '../../../../api/system';\nimport { HEALTH_FIELD } from '../../utils';\n\ninterface Props {\n  name: string;\n  value: SysValue;\n}\n\nexport default function SysInfoItem({ name, value }: Props): JSX.Element {\n  if (name === HEALTH_FIELD || name === 'State') {\n    return <HealthItem className=\"no-margin\" health={value as HealthType} />;\n  }\n  if (value instanceof Array) {\n    return <code>{JSON.stringify(value)}</code>;\n  }\n  switch (typeof value) {\n    case 'boolean':\n      return <BooleanItem value={value as boolean} />;\n    case 'object':\n      return <ObjectItem value={value as SysValueObject} />;\n    default:\n      return <code>{value}</code>;\n  }\n}\n\nfunction BooleanItem({ value }: { value: boolean }) {\n  if (value) {\n    return <AlertSuccessIcon />;\n  } else {\n    return <AlertErrorIcon />;\n  }\n}\n\nfunction ObjectItem({ value }: { value: SysValueObject }) {\n  return (\n    <table className=\"data\">\n      <tbody>\n        {map(value, (value, name) => (\n          <tr key={name}>\n            <td className=\"thin nowrap\">{name}</td>\n            <td>\n              <SysInfoItem name={name} value={value} />\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { map } from 'lodash';\nimport SysInfoItem from './SysInfoItem';\nimport { SysValueObject } from '../../../../api/system';\n\ninterface Props {\n  name?: string;\n  items: SysValueObject;\n}\n\nexport default function Section({ name, items }: Props) {\n  return (\n    <div className=\"system-info-section\">\n      {name && <h4 className=\"spacer-bottom\">{name}</h4>}\n      <table className=\"data zebra\" id={name}>\n        <tbody>\n          {map(items, (value, name) => {\n            return (\n              <tr key={name}>\n                <td className=\"thin\">\n                  <div className=\"system-info-section-item-name\">{name}</div>\n                </td>\n                <td style={{ wordBreak: 'break-all' }}>\n                  <SysInfoItem name={name} value={value} />\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { map } from 'lodash';\nimport HealthItem from './HealthItem';\nimport Section from './Section';\nimport BoxedGroupAccordion from '../../../../components/controls/BoxedGroupAccordion';\nimport { HealthType, SysValueObject } from '../../../../api/system';\nimport { LOGS_LEVELS, groupSections, getLogsLevel } from '../../utils';\nimport { translate } from '../../../../helpers/l10n';\n\ninterface Props {\n  biggerHealth?: boolean;\n  health?: HealthType;\n  healthCauses?: string[];\n  onClick: (toggledCard: string) => void;\n  open: boolean;\n  name: string;\n  sysInfoData: SysValueObject;\n}\n\nexport default function HealthCard({\n  biggerHealth,\n  health,\n  healthCauses,\n  onClick,\n  open,\n  name,\n  sysInfoData\n}: Props) {\n  const { mainSection, sections } = groupSections(sysInfoData);\n  const showFields = open && mainSection && Object.keys(mainSection).length > 0;\n  const showSections = open && sections;\n  const logLevel = getLogsLevel(sysInfoData);\n  const showLogLevelWarning = logLevel && logLevel !== LOGS_LEVELS[0];\n  return (\n    <BoxedGroupAccordion\n      data={name}\n      onClick={onClick}\n      open={open}\n      renderHeader={() => (\n        <>\n          {showLogLevelWarning && (\n            <span className=\"alert alert-danger spacer-left\">\n              {translate('system.log_level.warning.short')}\n            </span>\n          )}\n          {health && (\n            <HealthItem\n              biggerHealth={biggerHealth}\n              className=\"pull-right\"\n              health={health}\n              healthCauses={healthCauses}\n              name={name}\n            />\n          )}\n        </>\n      )}\n      title={name}>\n      {showFields && <Section items={mainSection} />}\n      {showSections &&\n        map(sections, (section, name) => <Section key={name} items={section} name={name} />)}\n    </BoxedGroupAccordion>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { sortBy } from 'lodash';\nimport HealthCard from './info-items/HealthCard';\nimport { translate } from '../../../helpers/l10n';\nimport { ClusterSysInfo } from '../../../api/system';\nimport {\n  getAppNodes,\n  getHealth,\n  getHealthCauses,\n  getClusterMainCardSection,\n  getNodeName,\n  getSearchNodes,\n  ignoreInfoFields\n} from '../utils';\n\ninterface Props {\n  expandedCards: string[];\n  sysInfoData: ClusterSysInfo;\n  toggleCard: (toggledCard: string) => void;\n}\n\nexport default function ClusterSysInfos({ expandedCards, sysInfoData, toggleCard }: Props) {\n  const mainCardName = 'System';\n  return (\n    <>\n      <HealthCard\n        biggerHealth={true}\n        health={getHealth(sysInfoData)}\n        healthCauses={getHealthCauses(sysInfoData)}\n        name={mainCardName}\n        onClick={toggleCard}\n        open={expandedCards.includes(mainCardName)}\n        sysInfoData={ignoreInfoFields(getClusterMainCardSection(sysInfoData))}\n      />\n      <li className=\"note system-info-health-title\">\n        {translate('system.application_nodes_title')}\n      </li>\n      {sortBy(getAppNodes(sysInfoData), getNodeName).map(node => (\n        <HealthCard\n          key={getNodeName(node)}\n          health={getHealth(node)}\n          healthCauses={getHealthCauses(node)}\n          name={getNodeName(node)}\n          onClick={toggleCard}\n          open={expandedCards.includes(getNodeName(node))}\n          sysInfoData={ignoreInfoFields(node)}\n        />\n      ))}\n      <li className=\"note system-info-health-title\">{translate('system.search_nodes_title')}</li>\n      {sortBy(getSearchNodes(sysInfoData), getNodeName).map(node => (\n        <HealthCard\n          key={getNodeName(node)}\n          health={getHealth(node)}\n          healthCauses={getHealthCauses(node)}\n          name={getNodeName(node)}\n          onClick={toggleCard}\n          open={expandedCards.includes(getNodeName(node))}\n          sysInfoData={ignoreInfoFields(node)}\n        />\n      ))}\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { LOGS_LEVELS } from '../utils';\nimport { setLogLevel } from '../../../api/system';\nimport Modal from '../../../components/controls/Modal';\nimport { SubmitButton, ResetButtonLink } from '../../../components/ui/buttons';\nimport { translate } from '../../../helpers/l10n';\n\ninterface Props {\n  infoMsg: string;\n  logLevel: string;\n  onChange: (level: string) => void;\n  onClose: () => void;\n}\n\ninterface State {\n  newLevel: string;\n  updating: boolean;\n}\n\nexport default class ChangeLogLevelForm extends React.PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = { newLevel: props.logLevel, updating: false };\n  }\n\n  handleFormSubmit = (event: React.SyntheticEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const { newLevel } = this.state;\n    if (!this.state.updating) {\n      this.setState({ updating: true });\n      setLogLevel(newLevel).then(\n        () => this.props.onChange(newLevel),\n        () => this.setState({ updating: false })\n      );\n    }\n  };\n\n  handleLevelChange = (event: React.ChangeEvent<HTMLInputElement>) =>\n    this.setState({ newLevel: event.currentTarget.value });\n\n  render() {\n    const { updating, newLevel } = this.state;\n    const header = translate('system.set_log_level');\n    return (\n      <Modal contentLabel={header} onRequestClose={this.props.onClose}>\n        <form id=\"set-log-level-form\" onSubmit={this.handleFormSubmit}>\n          <div className=\"modal-head\">\n            <h2>{header}</h2>\n          </div>\n          <div className=\"modal-body\">\n            {LOGS_LEVELS.map(level => (\n              <p className=\"spacer-bottom\" key={level}>\n                <input\n                  checked={level === newLevel}\n                  className=\"spacer-right text-middle\"\n                  id={`loglevel-${level}`}\n                  name=\"system.log_levels\"\n                  onChange={this.handleLevelChange}\n                  type=\"radio\"\n                  value={level}\n                />\n                <label className=\"text-middle\" htmlFor={`loglevel-${level}`}>\n                  {level}\n                </label>\n              </p>\n            ))}\n            <div className=\"alert alert-info spacer-top\">{this.props.infoMsg}</div>\n            {newLevel !== 'INFO' && (\n              <div className=\"alert alert-danger spacer-top\">\n                {translate('system.log_level.warning')}\n              </div>\n            )}\n          </div>\n          <div className=\"modal-foot\">\n            {updating && <i className=\"spinner spacer-right\" />}\n            <SubmitButton disabled={updating} id=\"set-log-level-submit\">\n              {translate('save')}\n            </SubmitButton>\n            <ResetButtonLink id=\"set-log-level-cancel\" onClick={this.props.onClose}>\n              {translate('cancel')}\n            </ResetButtonLink>\n          </div>\n        </form>\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport ChangeLogLevelForm from './ChangeLogLevelForm';\nimport RestartForm from '../../../components/common/RestartForm';\nimport { getFileNameSuffix } from '../utils';\nimport Dropdown from '../../../components/controls/Dropdown';\nimport { EditButton, Button } from '../../../components/ui/buttons';\nimport { getBaseUrl } from '../../../helpers/urls';\nimport { translate } from '../../../helpers/l10n';\nimport DropdownIcon from '../../../components/icons-components/DropdownIcon';\n\ninterface Props {\n  canDownloadLogs: boolean;\n  canRestart: boolean;\n  cluster: boolean;\n  logLevel: string;\n  onLogLevelChange: () => void;\n  serverId?: string;\n}\n\ninterface State {\n  logLevel: string;\n  openLogsLevelForm: boolean;\n  openRestartForm: boolean;\n}\n\nexport default class PageActions extends React.PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      logLevel: props.logLevel,\n      openLogsLevelForm: false,\n      openRestartForm: false\n    };\n  }\n\n  componentWillReceiveProps(nextProps: Props) {\n    if (nextProps.logLevel !== this.state.logLevel) {\n      this.setState({ logLevel: nextProps.logLevel });\n    }\n  }\n\n  handleLogsLevelOpen = () => {\n    this.setState({ openLogsLevelForm: true });\n  };\n\n  handleLogsLevelChange = (logLevel: string) => {\n    this.setState({ logLevel });\n    this.props.onLogLevelChange();\n    this.handleLogsLevelClose();\n  };\n\n  handleLogsLevelClose = () => {\n    this.setState({ openLogsLevelForm: false });\n  };\n\n  handleServerRestartOpen = () => {\n    this.setState({ openRestartForm: true });\n  };\n\n  handleServerRestartClose = () => {\n    this.setState({ openRestartForm: false });\n  };\n\n  removeElementFocus = (event: React.SyntheticEvent<HTMLElement>) => {\n    event.currentTarget.blur();\n  };\n\n  render() {\n    const infoUrl = getBaseUrl() + '/api/system/info';\n    const logsUrl = getBaseUrl() + '/api/system/logs';\n    return (\n      <div className=\"page-actions\">\n        <span>\n          <span className=\"text-middle\">\n            {translate('system.logs_level')}\n            {':'}\n            <strong className=\"little-spacer-left\">{this.state.logLevel}</strong>\n          </span>\n          <EditButton\n            className=\"spacer-left button-small\"\n            id=\"edit-logs-level-button\"\n            onClick={this.handleLogsLevelOpen}\n          />\n        </span>\n        {this.props.canDownloadLogs && (\n          <Dropdown\n            className=\"display-inline-block spacer-left\"\n            overlay={\n              <ul className=\"menu\">\n                <li>\n                  <a\n                    download=\"sonarqube_app.log\"\n                    href={logsUrl + '?process=app'}\n                    id=\"logs-link\"\n                    target=\"_blank\">\n                    Main Process\n                  </a>\n                </li>\n                <li>\n                  <a\n                    download=\"sonarqube_ce.log\"\n                    href={logsUrl + '?process=ce'}\n                    id=\"ce-logs-link\"\n                    target=\"_blank\">\n                    Compute Engine\n                  </a>\n                </li>\n                <li>\n                  <a\n                    download=\"sonarqube_es.log\"\n                    href={logsUrl + '?process=es'}\n                    id=\"es-logs-link\"\n                    target=\"_blank\">\n                    Search Engine\n                  </a>\n                </li>\n                <li>\n                  <a\n                    download=\"sonarqube_web.log\"\n                    href={logsUrl + '?process=web'}\n                    id=\"web-logs-link\"\n                    target=\"_blank\">\n                    Web Server\n                  </a>\n                </li>\n              </ul>\n            }>\n            <Button>\n              {translate('system.download_logs')}\n              <DropdownIcon className=\"little-spacer-left\" />\n            </Button>\n          </Dropdown>\n        )}\n        <a\n          className=\"button spacer-left\"\n          download={`sonarqube-support-info-${getFileNameSuffix(this.props.serverId)}.json`}\n          href={infoUrl}\n          id=\"download-link\"\n          onClick={this.removeElementFocus}\n          target=\"_blank\">\n          {translate('system.download_system_info')}\n        </a>\n        {this.props.canRestart && (\n          <Button\n            className=\"spacer-left\"\n            id=\"restart-server-button\"\n            onClick={this.handleServerRestartOpen}>\n            {translate('system.restart_server')}\n          </Button>\n        )}\n        {this.props.canRestart &&\n          this.state.openRestartForm && <RestartForm onClose={this.handleServerRestartClose} />}\n        {this.state.openLogsLevelForm && (\n          <ChangeLogLevelForm\n            infoMsg={translate(\n              this.props.cluster ? 'system.cluster_log_level.info' : 'system.log_level.info'\n            )}\n            logLevel={this.state.logLevel}\n            onChange={this.handleLogsLevelChange}\n            onClose={this.handleLogsLevelClose}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport PageActions from './PageActions';\nimport { translate } from '../../../helpers/l10n';\n\ninterface Props {\n  isCluster: boolean;\n  loading: boolean;\n  logLevel: string;\n  onLogLevelChange: () => void;\n  serverId?: string;\n  showActions: boolean;\n}\n\nexport default function PageHeader(props: Props) {\n  return (\n    <header className=\"page-header\">\n      <h1 className=\"page-title\">{translate('system_info.page')}</h1>\n      {props.showActions && (\n        <PageActions\n          canDownloadLogs={!props.isCluster}\n          canRestart={!props.isCluster}\n          cluster={props.isCluster}\n          logLevel={props.logLevel}\n          serverId={props.serverId}\n          onLogLevelChange={props.onLogLevelChange}\n        />\n      )}\n      {props.loading && (\n        <div className=\"page-actions\">\n          <i className=\"spinner\" />\n        </div>\n      )}\n    </header>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { map } from 'lodash';\nimport HealthCard from './info-items/HealthCard';\nimport { SysInfo } from '../../../api/system';\nimport {\n  getHealth,\n  getHealthCauses,\n  getStandaloneMainSections,\n  getStandaloneSecondarySections,\n  ignoreInfoFields\n} from '../utils';\n\ninterface Props {\n  expandedCards: string[];\n  sysInfoData: SysInfo;\n  toggleCard: (toggledCard: string) => void;\n}\n\nexport default function StandAloneSysInfos({ expandedCards, sysInfoData, toggleCard }: Props) {\n  const mainCardName = 'System';\n  return (\n    <>\n      <HealthCard\n        biggerHealth={true}\n        health={getHealth(sysInfoData)}\n        healthCauses={getHealthCauses(sysInfoData)}\n        name={mainCardName}\n        onClick={toggleCard}\n        open={expandedCards.includes(mainCardName)}\n        sysInfoData={ignoreInfoFields(getStandaloneMainSections(sysInfoData))}\n      />\n      {map(getStandaloneSecondarySections(sysInfoData), (section, name) => (\n        <HealthCard\n          key={name}\n          name={name}\n          onClick={toggleCard}\n          open={expandedCards.includes(name)}\n          sysInfoData={ignoreInfoFields(section)}\n        />\n      ))}\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport DropdownIcon from '../../../../components/icons-components/DropdownIcon';\nimport DateFormatter from '../../../../components/intl/DateFormatter';\nimport { SystemUpgrade } from '../../../../api/system';\nimport { translate } from '../../../../helpers/l10n';\n\ninterface Props {\n  className?: string;\n  upgrades: SystemUpgrade[];\n}\n\ninterface State {\n  showMore: boolean;\n}\n\nexport default class SystemUpgradeIntermediate extends React.PureComponent<Props, State> {\n  state: State = { showMore: false };\n\n  toggleIntermediatVersions = (event: React.SyntheticEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    event.stopPropagation();\n    this.setState(state => ({ showMore: !state.showMore }));\n  };\n\n  render() {\n    const { showMore } = this.state;\n    const { upgrades } = this.props;\n    if (upgrades.length <= 0) {\n      return null;\n    }\n\n    return (\n      <div className={this.props.className}>\n        <a\n          className=\"button-link little-spacer-bottom\"\n          href=\"#\"\n          onClick={this.toggleIntermediatVersions}>\n          {showMore\n            ? translate('system.hide_intermediate_versions')\n            : translate('system.show_intermediate_versions')}\n          <DropdownIcon className=\"little-spacer-left\" turned={showMore} />\n        </a>\n        {showMore &&\n          upgrades.map(upgrade => (\n            <div className=\"note system-upgrade-intermediate\" key={upgrade.version}>\n              <DateFormatter date={upgrade.releaseDate} long={true}>\n                {formattedDate => (\n                  <p>\n                    <b className=\"little-spacer-right\">SonarQube {upgrade.version}</b>\n                    {formattedDate}\n                    {upgrade.changeLogUrl && (\n                      <a className=\"spacer-left\" href={upgrade.changeLogUrl} target=\"_blank\">\n                        {translate('system.release_notes')}\n                      </a>\n                    )}\n                  </p>\n                )}\n              </DateFormatter>\n              <p className=\"little-spacer-top\">{upgrade.description}</p>\n            </div>\n          ))}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport SystemUpgradeIntermediate from './SystemUpgradeIntermediate';\nimport DateFormatter from '../../../../components/intl/DateFormatter';\nimport { SystemUpgrade } from '../../../../api/system';\nimport { translate, translateWithParameters } from '../../../../helpers/l10n';\n\ninterface Props {\n  type?: string;\n  systemUpgrades: SystemUpgrade[];\n}\n\nexport default function SystemUpgradeItem({ type, systemUpgrades }: Props) {\n  const lastUpgrade = systemUpgrades[0];\n  return (\n    <div className=\"system-upgrade-version\">\n      {type && (\n        <h1 className=\"spacer-bottom\">\n          <strong>{type}</strong>\n        </h1>\n      )}\n      <p>\n        <FormattedMessage\n          defaultMessage={translate('system.version_is_availble')}\n          id=\"system.version_is_availble\"\n          values={{ version: <b>SonarQube {lastUpgrade.version}</b> }}\n        />\n      </p>\n      <p className=\"spacer-top\">{lastUpgrade.description}</p>\n      <div className=\"big-spacer-top\">\n        <DateFormatter date={lastUpgrade.releaseDate} long={true}>\n          {formattedDate => (\n            <span>{translateWithParameters('system.released_x', formattedDate)}</span>\n          )}\n        </DateFormatter>\n        {lastUpgrade.changeLogUrl && (\n          <a className=\"spacer-left\" href={lastUpgrade.changeLogUrl} target=\"_blank\">\n            {translate('system.release_notes')}\n          </a>\n        )}\n      </div>\n      <SystemUpgradeIntermediate className=\"spacer-top\" upgrades={systemUpgrades.slice(1)} />\n      <div className=\"big-spacer-top\">\n        <a\n          className=\"button\"\n          download={`sonarqube-${lastUpgrade.version}.zip`}\n          href={lastUpgrade.downloadUrl}\n          target=\"blank\">\n          {translateWithParameters('system.download_x', lastUpgrade.version)}\n        </a>\n        <a\n          className=\"spacer-left\"\n          href=\"https://redirect.sonarsource.com/doc/upgrading.html\"\n          target=\"_blank\">\n          {translate('system.how_to_upgrade')}\n        </a>\n      </div>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport SystemUpgradeItem from './SystemUpgradeItem';\nimport { SystemUpgrade } from '../../../../api/system';\nimport Modal from '../../../../components/controls/Modal';\nimport { translate } from '../../../../helpers/l10n';\n\ninterface Props {\n  systemUpgrades: SystemUpgrade[][];\n  onClose: () => void;\n}\n\ninterface State {\n  upgrading: boolean;\n}\n\nexport default class SystemUpgradeForm extends React.PureComponent<Props, State> {\n  state: State = { upgrading: false };\n\n  handleCancelClick = (event: React.SyntheticEvent<HTMLElement>) => {\n    event.preventDefault();\n    event.stopPropagation();\n    this.props.onClose();\n  };\n\n  render() {\n    const { upgrading } = this.state;\n    const { systemUpgrades } = this.props;\n    const header = translate('system.system_upgrade');\n    return (\n      <Modal contentLabel={header} onRequestClose={this.props.onClose}>\n        <div className=\"modal-head\">\n          <h2>{header}</h2>\n        </div>\n        <div className=\"modal-body\">\n          {systemUpgrades.map((upgrades, idx) => (\n            <SystemUpgradeItem\n              key={upgrades[upgrades.length - 1].version}\n              type={\n                idx === 0 ? translate('system.latest_version') : translate('system.lts_version')\n              }\n              systemUpgrades={upgrades}\n            />\n          ))}\n        </div>\n        <div className=\"modal-foot\">\n          {upgrading && <i className=\"spinner spacer-right\" />}\n          <a className=\"pull-left\" href=\"https://www.sonarqube.org/downloads/\" target=\"_blank\">\n            {translate('system.see_sonarqube_downloads')}\n          </a>\n          <a href=\"#\" onClick={this.handleCancelClick}>\n            {translate('cancel')}\n          </a>\n        </div>\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport SystemUpgradeForm from './SystemUpgradeForm';\nimport { sortUpgrades, groupUpgrades } from '../../utils';\nimport { getSystemUpgrades, SystemUpgrade } from '../../../../api/system';\nimport { Button } from '../../../../components/ui/buttons';\nimport { translate } from '../../../../helpers/l10n';\n\ninterface State {\n  systemUpgrades: SystemUpgrade[][];\n  openSystemUpgradeForm: boolean;\n}\n\nexport default class SystemUpgradeNotif extends React.PureComponent<{}, State> {\n  mounted = false;\n  state: State = { openSystemUpgradeForm: false, systemUpgrades: [] };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchSystemUpgrade();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchSystemUpgrade = () =>\n    getSystemUpgrades().then(\n      ({ upgrades }) => {\n        if (this.mounted) {\n          this.setState({ systemUpgrades: groupUpgrades(sortUpgrades(upgrades)) });\n        }\n      },\n      () => {}\n    );\n\n  handleOpenSystemUpgradeForm = () => {\n    this.setState({ openSystemUpgradeForm: true });\n  };\n\n  handleCloseSystemUpgradeForm = () => {\n    this.setState({ openSystemUpgradeForm: false });\n  };\n\n  render() {\n    const { systemUpgrades } = this.state;\n\n    if (systemUpgrades.length <= 0) {\n      return null;\n    }\n\n    return (\n      <div className=\"page-notifs\">\n        <div className=\"alert alert-info\">\n          {translate('system.new_version_available')}\n          <Button className=\"spacer-left\" onClick={this.handleOpenSystemUpgradeForm}>\n            {translate('learn_more')}\n          </Button>\n        </div>\n        {this.state.openSystemUpgradeForm && (\n          <SystemUpgradeForm\n            onClose={this.handleCloseSystemUpgradeForm}\n            systemUpgrades={systemUpgrades}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport ClusterSysInfos from './ClusterSysInfos';\nimport PageHeader from './PageHeader';\nimport StandaloneSysInfos from './StandaloneSysInfos';\nimport SystemUpgradeNotif from './system-upgrade/SystemUpgradeNotif';\nimport Suggestions from '../../../app/components/embed-docs-modal/Suggestions';\nimport { translate } from '../../../helpers/l10n';\nimport { ClusterSysInfo, getSystemInfo, SysInfo } from '../../../api/system';\nimport {\n  getServerId,\n  getSystemLogsLevel,\n  isCluster,\n  parseQuery,\n  Query,\n  serializeQuery\n} from '../utils';\nimport { RawQuery } from '../../../helpers/query';\nimport '../styles.css';\n\ninterface Props {\n  location: { pathname: string; query: RawQuery };\n}\n\ninterface State {\n  loading: boolean;\n  sysInfoData?: SysInfo;\n}\n\nexport default class App extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  static contextTypes = {\n    router: PropTypes.object\n  };\n\n  constructor(props: Props) {\n    super(props);\n    this.state = { loading: true };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchSysInfo();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchSysInfo = () => {\n    this.setState({ loading: true });\n    getSystemInfo().then(\n      (sysInfoData: SysInfo) => {\n        if (this.mounted) {\n          this.setState({ loading: false, sysInfoData });\n        }\n      },\n      () => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      }\n    );\n  };\n\n  toggleSysInfoCards = (toggledCard: string) => {\n    const query = parseQuery(this.props.location.query);\n    let expandedCards;\n    if (query.expandedCards.includes(toggledCard)) {\n      expandedCards = query.expandedCards.filter(card => card !== toggledCard);\n    } else {\n      expandedCards = query.expandedCards.concat(toggledCard);\n    }\n    this.updateQuery({ expandedCards });\n  };\n\n  updateQuery = (newQuery: Query) => {\n    const query = serializeQuery({ ...parseQuery(this.props.location.query), ...newQuery });\n    this.context.router.replace({ pathname: this.props.location.pathname, query });\n  };\n\n  renderSysInfo() {\n    const { sysInfoData } = this.state;\n    if (!sysInfoData) {\n      return null;\n    }\n\n    const query = parseQuery(this.props.location.query);\n    if (isCluster(sysInfoData)) {\n      return (\n        <ClusterSysInfos\n          expandedCards={query.expandedCards}\n          sysInfoData={sysInfoData as ClusterSysInfo}\n          toggleCard={this.toggleSysInfoCards}\n        />\n      );\n    }\n    return (\n      <StandaloneSysInfos\n        expandedCards={query.expandedCards}\n        sysInfoData={sysInfoData}\n        toggleCard={this.toggleSysInfoCards}\n      />\n    );\n  }\n\n  render() {\n    const { loading, sysInfoData } = this.state;\n    return (\n      <div className=\"page page-limited\">\n        <Suggestions suggestions=\"system_info\" />\n        <Helmet title={translate('system_info.page')} />\n        <SystemUpgradeNotif />\n        <PageHeader\n          isCluster={isCluster(sysInfoData)}\n          loading={loading}\n          logLevel={getSystemLogsLevel(sysInfoData)}\n          onLogLevelChange={this.fetchSysInfo}\n          serverId={getServerId(sysInfoData)}\n          showActions={sysInfoData !== undefined}\n        />\n        {this.renderSysInfo()}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { SuggestionsContext } from './SuggestionsContext';\n\ninterface Props {\n  suggestions: string;\n}\n\nexport default class Suggestions extends React.PureComponent<Props> {\n  context!: { suggestions: SuggestionsContext };\n\n  static contextTypes = {\n    suggestions: PropTypes.object.isRequired\n  };\n\n  componentDidMount() {\n    this.context.suggestions.addSuggestions(this.props.suggestions);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.suggestions !== this.props.suggestions) {\n      this.context.suggestions.removeSuggestions(this.props.suggestions);\n      this.context.suggestions.addSuggestions(prevProps.suggestions);\n    }\n  }\n\n  componentWillUnmount() {\n    this.context.suggestions.removeSuggestions(this.props.suggestions);\n  }\n\n  render() {\n    return null;\n  }\n}\n","var arrayMap = require('./_arrayMap'),\n    baseIteratee = require('./_baseIteratee'),\n    baseMap = require('./_baseMap'),\n    isArray = require('./isArray');\n\n/**\n * Creates an array of values by running each element in `collection` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, index|key, collection).\n *\n * Many lodash methods are guarded to work as iteratees for methods like\n * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n *\n * The guarded methods are:\n * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n * @example\n *\n * function square(n) {\n *   return n * n;\n * }\n *\n * _.map([4, 8], square);\n * // => [16, 64]\n *\n * _.map({ 'a': 4, 'b': 8 }, square);\n * // => [16, 64] (iteration order is not guaranteed)\n *\n * var users = [\n *   { 'user': 'barney' },\n *   { 'user': 'fred' }\n * ];\n *\n * // The `_.property` iteratee shorthand.\n * _.map(users, 'user');\n * // => ['barney', 'fred']\n */\nfunction map(collection, iteratee) {\n  var func = isArray(collection) ? arrayMap : baseMap;\n  return func(collection, baseIteratee(iteratee, 3));\n}\n\nmodule.exports = map;\n","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The order of grouped values\n * is determined by the order they occur in `collection`. The corresponding\n * value of each key is an array of elements responsible for generating the\n * key. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n * // => { '4': [4.2], '6': [6.1, 6.3] }\n *\n * // The `_.property` iteratee shorthand.\n * _.groupBy(['one', 'two', 'three'], 'length');\n * // => { '3': ['one', 'two'], '5': ['three'] }\n */\nvar groupBy = createAggregator(function(result, value, key) {\n  if (hasOwnProperty.call(result, key)) {\n    result[key].push(value);\n  } else {\n    baseAssignValue(result, key, [value]);\n  }\n});\n\nmodule.exports = groupBy;\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Icon, { IconProps } from './Icon';\n\nexport default function ChevronRightIcon({ className, fill = 'currentColor', size }: IconProps) {\n  return (\n    <Icon className={className} size={size}>\n      <path\n        d=\"M11.596 8.28l-4.604 4.602a.382.382 0 0 1-.279.118.382.382 0 0 1-.279-.118l-1.03-1.03a.382.382 0 0 1-.117-.278c0-.108.04-.201.117-.28L8.7 8 5.404 4.706a.382.382 0 0 1-.117-.28c0-.108.04-.2.117-.279l1.03-1.03A.382.382 0 0 1 6.714 3c.107 0 .2.04.278.118l4.604 4.603a.382.382 0 0 1 .117.279c0 .108-.04.201-.117.28z\"\n        style={{ fill }}\n      />\n    </Icon>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post, postJSON } from '../helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\nexport type SysValue = boolean | string | number | HealthType | SysValueObject | SysValueArray;\nexport interface SysValueObject {\n  [key: string]: SysValue;\n}\nexport interface SysValueArray extends Array<SysValue> {}\n\nexport interface SysInfoSection {\n  [sectionName: string]: SysValueObject;\n}\n\nexport enum HealthType {\n  RED = 'RED',\n  YELLOW = 'YELLOW',\n  GREEN = 'GREEN'\n}\n\nexport interface NodeInfo extends SysValueObject {\n  'Compute Engine Logging': { 'Logs Level': string };\n  Health: HealthType;\n  'Health Causes': string[];\n  Name: string;\n  'Web Logging': { 'Logs Level': string };\n}\n\nexport interface SysInfo extends SysValueObject {\n  Health: HealthType;\n  'Health Causes': string[];\n  System: {\n    'High Availability': boolean;\n    'Logs Level': string;\n    'Server ID': string;\n  };\n}\n\nexport interface ClusterSysInfo extends SysInfo {\n  'Application Nodes': NodeInfo[];\n  'Search Nodes': NodeInfo[];\n}\n\nexport interface SystemUpgrade {\n  version: string;\n  description: string;\n  releaseDate: string;\n  changeLogUrl: string;\n  downloadUrl: string;\n  plugins: any;\n}\n\nexport function setLogLevel(level: string): Promise<void | Response> {\n  return post('/api/system/change_log_level', { level }).catch(throwGlobalError);\n}\n\nexport function getSystemInfo(): Promise<SysInfo> {\n  return getJSON('/api/system/info').catch(throwGlobalError);\n}\n\nexport function getSystemStatus(): Promise<{ id: string; version: string; status: string }> {\n  return getJSON('/api/system/status');\n}\n\nexport function getSystemUpgrades(): Promise<{\n  upgrades: SystemUpgrade[];\n  updateCenterRefresh: string;\n}> {\n  return getJSON('/api/system/upgrades');\n}\n\nexport function getMigrationStatus(): Promise<{\n  message?: string;\n  startedAt?: string;\n  state: string;\n}> {\n  return getJSON('/api/system/db_migration_status');\n}\n\nexport function migrateDatabase(): Promise<{\n  message?: string;\n  startedAt?: string;\n  state: string;\n}> {\n  return postJSON('/api/system/migrate_db');\n}\n\nexport function restart(): Promise<void | Response> {\n  return post('/api/system/restart').catch(throwGlobalError);\n}\n\nconst POLLING_INTERVAL = 2000;\n\nfunction pollStatus(cb: Function): void {\n  setTimeout(() => {\n    getSystemStatus()\n      .then(r => {\n        if (r.status === 'UP') {\n          cb();\n        } else {\n          pollStatus(cb);\n        }\n      })\n      .catch(() => pollStatus(cb));\n  }, POLLING_INTERVAL);\n}\n\nfunction promiseStatus(): Promise<any> {\n  return new Promise(resolve => pollStatus(resolve));\n}\n\nexport function restartAndWait(): Promise<any> {\n  return restart().then(promiseStatus);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Icon, { IconProps } from './Icon';\n\nexport default function ChevronDownIcon({ className, fill = 'currentColor', size }: IconProps) {\n  return (\n    <Icon className={className} size={size}>\n      <path\n        d=\"M7.72 11.596L3.119 6.992A.382.382 0 0 1 3 6.713c0-.108.04-.2.118-.279l1.03-1.03a.382.382 0 0 1 .278-.117c.108 0 .201.04.28.117L8 8.7l3.294-3.295a.382.382 0 0 1 .28-.117c.108 0 .2.04.279.117l1.03 1.03a.382.382 0 0 1 .117.28c0 .107-.04.2-.118.278L8.28 11.596a.382.382 0 0 1-.279.117.382.382 0 0 1-.28-.117z\"\n        style={{ fill }}\n      />\n    </Icon>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { IconProps } from './Icon';\nimport ChevronDownIcon from './ChevronDownIcon';\nimport ChevronRightIcon from './ChevronRightcon';\n\ninterface Props extends IconProps {\n  open: boolean;\n}\n\nexport default function OpenCloseIcon({ open, ...props }: Props) {\n  return open ? <ChevronDownIcon {...props} /> : <ChevronRightIcon {...props} />;\n}\n"],"sourceRoot":""}