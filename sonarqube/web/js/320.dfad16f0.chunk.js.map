{"version":3,"sources":["webpack:///./src/main/js/components/intl/TimeFormatter.tsx","webpack:///./src/main/js/apps/maintenance/styles.css","webpack:///./src/main/js/apps/maintenance/styles.css?c19d","webpack:///./src/main/js/apps/maintenance/components/App.tsx","webpack:///./src/main/js/apps/maintenance/components/MaintenanceAppContainer.tsx","webpack:///./src/main/js/api/system.ts"],"names":["formatterOption","hour","minute","longFormatterOption","second","TimeFormatter","_a","children","date","long","react__WEBPACK_IMPORTED_MODULE_0__","react_intl__WEBPACK_IMPORTED_MODULE_1__","__assign","value","Object","_helpers_dates__WEBPACK_IMPORTED_MODULE_2__","module","exports","__webpack_require__","push","i","content","options","hmr","transform","insertInto","undefined","locals","App","_super","_this","apply","this","arguments","mounted","state","fetchStatus","props","setup","fetchMigrationState","fetchSystemStatus","catch","setState","message","startedAt","status","_api_system__WEBPACK_IMPORTED_MODULE_3__","then","wasStarting","scheduleRefresh","loadPreviousPage","interval","window","setTimeout","setInterval","location","href","query","_helpers_urls__WEBPACK_IMPORTED_MODULE_8__","handleMigrateClick","__extends","prototype","componentDidMount","componentWillUnmount","clearInterval","render","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","a","defaultTitle","_helpers_l10n__WEBPACK_IMPORTED_MODULE_7__","className","id","classnames__WEBPACK_IMPORTED_MODULE_1__","panel-warning","dangerouslySetInnerHTML","__html","_components_ui_buttons__WEBPACK_IMPORTED_MODULE_6__","onClick","_components_intl_DateFromNow__WEBPACK_IMPORTED_MODULE_4__","_components_intl_TimeFormatter__WEBPACK_IMPORTED_MODULE_5__","MaintenanceAppContainer","_App__WEBPACK_IMPORTED_MODULE_1__","HealthType","setLogLevel","level","_helpers_request__WEBPACK_IMPORTED_MODULE_0__","_app_utils_throwGlobalError__WEBPACK_IMPORTED_MODULE_1__","getSystemInfo","getSystemStatus","getSystemUpgrades","getMigrationStatus","migrateDatabase","POLLING_INTERVAL","promiseStatus","Promise","resolve","pollStatus","cb","r","restartAndWait"],"mappings":"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","file":"js/320.dfad16f0.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { DateSource, FormattedTime } from 'react-intl';\nimport { parseDate } from '../../helpers/dates';\n\ninterface Props {\n  children?: (formattedDate: string) => React.ReactNode;\n  date: DateSource;\n  long?: boolean;\n}\n\nexport const formatterOption = { hour: 'numeric', minute: 'numeric' };\n\nexport const longFormatterOption = { hour: 'numeric', minute: 'numeric', second: 'numeric' };\n\nexport default function TimeFormatter({ children, date, long }: Props) {\n  return (\n    <FormattedTime value={parseDate(date)} {...(long ? longFormatterOption : formatterOption)}>\n      {children}\n    </FormattedTime>\n  );\n}\n","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".maintenance-title{margin-bottom:40px;line-height:1.5;font-size:24px;font-weight:300;text-align:center}.maintenance-text{margin-bottom:16px;line-height:1.5;font-size:16px;font-weight:300}.maintenance-spinner{margin-top:40px;text-align:center}\", \"\"]);\n\n// exports\n","\nvar content = require(\"!!../../../../../node_modules/css-loader/index.js??ref--6-1!../../../../../node_modules/postcss-loader/lib/index.js??postcss!./styles.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/index.js??ref--6-1!../../../../../node_modules/postcss-loader/lib/index.js??postcss!./styles.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/index.js??ref--6-1!../../../../../node_modules/postcss-loader/lib/index.js??postcss!./styles.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport Helmet from 'react-helmet';\nimport { getMigrationStatus, getSystemStatus, migrateDatabase } from '../../../api/system';\nimport DateFromNow from '../../../components/intl/DateFromNow';\nimport TimeFormatter from '../../../components/intl/TimeFormatter';\nimport { Button } from '../../../components/ui/buttons';\nimport { translate } from '../../../helpers/l10n';\nimport { getBaseUrl } from '../../../helpers/urls';\nimport '../styles.css';\n\ninterface Props {\n  // eslint-disable-next-line camelcase\n  location: { query: { return_to?: string } };\n  setup: boolean;\n}\n\ninterface State {\n  message?: string;\n  startedAt?: string;\n  state?: string;\n  status?: string;\n  wasStarting?: boolean;\n}\n\nexport default class App extends React.PureComponent<Props, State> {\n  interval?: number;\n  mounted = false;\n  state: State = {};\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchStatus();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n    if (this.interval) {\n      window.clearInterval(this.interval);\n    }\n  }\n\n  fetchStatus = () => {\n    const request = this.props.setup ? this.fetchMigrationState() : this.fetchSystemStatus();\n    request.catch(() => {\n      if (this.mounted) {\n        this.setState({\n          message: undefined,\n          startedAt: undefined,\n          state: undefined,\n          status: 'OFFLINE'\n        });\n      }\n    });\n  };\n\n  fetchSystemStatus = () => {\n    return getSystemStatus().then(({ status }) => {\n      if (this.mounted) {\n        this.setState({ status });\n\n        if (status === 'STARTING') {\n          this.setState({ wasStarting: true });\n          this.scheduleRefresh();\n        } else if (status === 'UP') {\n          if (this.state.wasStarting) {\n            this.loadPreviousPage();\n          }\n        } else {\n          this.scheduleRefresh();\n        }\n      }\n    });\n  };\n\n  fetchMigrationState = () => {\n    return getMigrationStatus().then(({ message, startedAt, state }) => {\n      if (this.mounted) {\n        this.setState({ message, startedAt, state });\n        if (state === 'MIGRATION_SUCCEEDED') {\n          this.loadPreviousPage();\n        } else if (state !== 'NO_MIGRATION') {\n          this.scheduleRefresh();\n        }\n      }\n    });\n  };\n\n  scheduleRefresh = () => {\n    this.interval = window.setTimeout(this.fetchStatus, 5000);\n  };\n\n  loadPreviousPage = () => {\n    setInterval(() => {\n      window.location.href = this.props.location.query['return_to'] || getBaseUrl() + '/';\n    }, 2500);\n  };\n\n  handleMigrateClick = () => {\n    migrateDatabase().then(\n      ({ message, startedAt, state }) => {\n        if (this.mounted) {\n          this.setState({ message, startedAt, state });\n        }\n      },\n      () => {}\n    );\n  };\n\n  render() {\n    const { state, status } = this.state;\n\n    return (\n      <>\n        <Helmet defaultTitle={translate('maintenance.page')} />\n        <div className=\"page-wrapper-simple\" id=\"bd\">\n          <div\n            className={classNames('page-simple', {\n              'panel-warning': state === 'MIGRATION_REQUIRED'\n            })}\n            id=\"nonav\">\n            {status === 'OFFLINE' && (\n              <>\n                <h1 className=\"maintenance-title text-danger\">\n                  {translate('maintenance.sonarqube_is_offline')}\n                </h1>\n                <p className=\"maintenance-text\">\n                  {translate('maintenance.sonarqube_is_offline.text')}\n                </p>\n                <p className=\"maintenance-text text-center\">\n                  <a href={getBaseUrl() + '/'}>{translate('maintenance.try_again')}</a>\n                </p>\n              </>\n            )}\n\n            {status === 'UP' && (\n              <>\n                <h1 className=\"maintenance-title\">{translate('maintenance.sonarqube_is_up')}</h1>\n                <p className=\"maintenance-text text-center\">\n                  {translate('maintenance.all_systems_opetational')}\n                </p>\n                <p className=\"maintenance-text text-center\">\n                  <a href={getBaseUrl() + '/'}>{translate('layout.home')}</a>\n                </p>\n              </>\n            )}\n\n            {status === 'STARTING' && (\n              <>\n                <h1 className=\"maintenance-title\">\n                  {translate('maintenance.sonarqube_is_starting')}\n                </h1>\n                <p className=\"maintenance-spinner\">\n                  <i className=\"spinner\" />\n                </p>\n              </>\n            )}\n\n            {status === 'DOWN' && (\n              <>\n                <h1 className=\"maintenance-title text-danger\">\n                  {translate('maintenance.sonarqube_is_down')}\n                </h1>\n                <p className=\"maintenance-text\">\n                  {translate('maintenance.sonarqube_is_down.text')}\n                </p>\n                <p className=\"maintenance-text text-center\">\n                  <a href={getBaseUrl() + '/'}>{translate('maintenance.try_again')}</a>\n                </p>\n              </>\n            )}\n\n            {(status === 'DB_MIGRATION_NEEDED' || status === 'DB_MIGRATION_RUNNING') && (\n              <>\n                <h1 className=\"maintenance-title\">\n                  {translate('maintenance.sonarqube_is_under_maintenance')}\n                </h1>\n                <p\n                  className=\"maintenance-text\"\n                  dangerouslySetInnerHTML={{\n                    __html: translate('maintenance.sonarqube_is_under_maintenance.1')\n                  }}\n                />\n                <p\n                  className=\"maintenance-text\"\n                  dangerouslySetInnerHTML={{\n                    __html: translate('maintenance.sonarqube_is_under_maintenance.2')\n                  }}\n                />\n              </>\n            )}\n\n            {state === 'NO_MIGRATION' && (\n              <>\n                <h1 className=\"maintenance-title\">\n                  {translate('maintenance.database_is_up_to_date')}\n                </h1>\n                <p className=\"maintenance-text text-center\">\n                  <a href={getBaseUrl() + '/'}>{translate('layout.home')}</a>\n                </p>\n              </>\n            )}\n\n            {state === 'MIGRATION_REQUIRED' && (\n              <>\n                <h1 className=\"maintenance-title\">{translate('maintenance.upgrade_database')}</h1>\n                <p className=\"maintenance-text\">{translate('maintenance.upgrade_database.1')}</p>\n                <p className=\"maintenance-text\">{translate('maintenance.upgrade_database.2')}</p>\n                <p className=\"maintenance-text\">{translate('maintenance.upgrade_database.3')}</p>\n                <div className=\"maintenance-spinner\">\n                  <Button id=\"start-migration\" onClick={this.handleMigrateClick}>\n                    {translate('maintenance.upgrade')}\n                  </Button>\n                </div>\n              </>\n            )}\n\n            {state === 'NOT_SUPPORTED' && (\n              <>\n                <h1 className=\"maintenance-title text-danger\">\n                  {translate('maintenance.migration_not_supported')}\n                </h1>\n                <p>{translate('maintenance.migration_not_supported.text')}</p>\n              </>\n            )}\n\n            {state === 'MIGRATION_RUNNING' && (\n              <>\n                <h1 className=\"maintenance-title\">{translate('maintenance.database_migration')}</h1>\n                {this.state.message && (\n                  <p className=\"maintenance-text text-center\">{this.state.message}</p>\n                )}\n                {this.state.startedAt && (\n                  <p className=\"maintenance-text text-center\">\n                    {translate('background_tasks.table.started')}{' '}\n                    <DateFromNow date={this.state.startedAt} />\n                    <br />\n                    <small className=\"text-muted\">\n                      <TimeFormatter date={this.state.startedAt} long={true} />\n                    </small>\n                  </p>\n                )}\n                <p className=\"maintenance-spinner\">\n                  <i className=\"spinner\" />\n                </p>\n              </>\n            )}\n\n            {state === 'MIGRATION_SUCCEEDED' && (\n              <>\n                <h1 className=\"maintenance-title text-success\">\n                  {translate('maintenance.database_is_up_to_date')}\n                </h1>\n                <p className=\"maintenance-text text-center\">\n                  <a href={getBaseUrl() + '/'}>{translate('layout.home')}</a>\n                </p>\n              </>\n            )}\n\n            {state === 'MIGRATION_FAILED' && (\n              <>\n                <h1 className=\"maintenance-title text-danger\">\n                  {translate('maintenance.upgrade_failed')}\n                </h1>\n                <p className=\"maintenance-text\">{translate('maintenance.upgrade_failed.text')}</p>\n              </>\n            )}\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport App from './App';\n\ninterface Props {\n  // eslint-disable-next-line camelcase\n  location: { query: { return_to: string } };\n}\n\nexport default function MaintenanceAppContainer(props: Props) {\n  return <App setup={false} {...props} />;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post, postJSON } from '../helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\nexport type SysValue = boolean | string | number | HealthType | SysValueObject | SysValueArray;\nexport interface SysValueObject {\n  [key: string]: SysValue;\n}\nexport interface SysValueArray extends Array<SysValue> {}\n\nexport interface SysInfoSection {\n  [sectionName: string]: SysValueObject;\n}\n\nexport enum HealthType {\n  RED = 'RED',\n  YELLOW = 'YELLOW',\n  GREEN = 'GREEN'\n}\n\nexport interface NodeInfo extends SysValueObject {\n  'Compute Engine Logging': { 'Logs Level': string };\n  Health: HealthType;\n  'Health Causes': string[];\n  Name: string;\n  'Web Logging': { 'Logs Level': string };\n}\n\nexport interface SysInfo extends SysValueObject {\n  Health: HealthType;\n  'Health Causes': string[];\n  System: {\n    'High Availability': boolean;\n    'Logs Level': string;\n    'Server ID': string;\n  };\n}\n\nexport interface ClusterSysInfo extends SysInfo {\n  'Application Nodes': NodeInfo[];\n  'Search Nodes': NodeInfo[];\n}\n\nexport interface SystemUpgrade {\n  version: string;\n  description: string;\n  releaseDate: string;\n  changeLogUrl: string;\n  downloadUrl: string;\n  plugins: any;\n}\n\nexport function setLogLevel(level: string): Promise<void | Response> {\n  return post('/api/system/change_log_level', { level }).catch(throwGlobalError);\n}\n\nexport function getSystemInfo(): Promise<SysInfo> {\n  return getJSON('/api/system/info').catch(throwGlobalError);\n}\n\nexport function getSystemStatus(): Promise<{ id: string; version: string; status: string }> {\n  return getJSON('/api/system/status');\n}\n\nexport function getSystemUpgrades(): Promise<{\n  upgrades: SystemUpgrade[];\n  updateCenterRefresh: string;\n}> {\n  return getJSON('/api/system/upgrades');\n}\n\nexport function getMigrationStatus(): Promise<{\n  message?: string;\n  startedAt?: string;\n  state: string;\n}> {\n  return getJSON('/api/system/db_migration_status');\n}\n\nexport function migrateDatabase(): Promise<{\n  message?: string;\n  startedAt?: string;\n  state: string;\n}> {\n  return postJSON('/api/system/migrate_db');\n}\n\nexport function restart(): Promise<void | Response> {\n  return post('/api/system/restart').catch(throwGlobalError);\n}\n\nconst POLLING_INTERVAL = 2000;\n\nfunction pollStatus(cb: Function): void {\n  setTimeout(() => {\n    getSystemStatus()\n      .then(r => {\n        if (r.status === 'UP') {\n          cb();\n        } else {\n          pollStatus(cb);\n        }\n      })\n      .catch(() => pollStatus(cb));\n  }, POLLING_INTERVAL);\n}\n\nfunction promiseStatus(): Promise<any> {\n  return new Promise(resolve => pollStatus(resolve));\n}\n\nexport function restartAndWait(): Promise<any> {\n  return restart().then(promiseStatus);\n}\n"],"sourceRoot":""}