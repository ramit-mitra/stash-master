{"version":3,"sources":["webpack:///./node_modules/lodash/_baseSome.js","webpack:///./node_modules/lodash/some.js","webpack:///./src/main/js/apps/project-admin/key/Header.js","webpack:///./src/main/js/apps/project-admin/key/UpdateKeyConfirm.tsx","webpack:///./src/main/js/apps/project-admin/key/UpdateForm.tsx","webpack:///./src/main/js/apps/project-admin/key/BulkUpdateForm.js","webpack:///./src/main/js/apps/project-admin/key/BulkUpdateResults.js","webpack:///./src/main/js/apps/project-admin/key/utils.js","webpack:///./src/main/js/apps/project-admin/key/BulkUpdate.js","webpack:///./src/main/js/apps/project-admin/key/UpdateKeyForm.tsx","webpack:///./src/main/js/apps/project-admin/key/FineGrainedUpdate.js","webpack:///./src/main/js/apps/project-admin/key/Key.js","webpack:///./src/main/js/components/controls/SimpleModal.tsx","webpack:///./src/main/js/components/controls/ModalButton.tsx","webpack:///./src/main/js/components/controls/ConfirmModal.tsx","webpack:///./src/main/js/components/controls/ConfirmButton.tsx"],"names":["baseEach","__webpack_require__","module","exports","collection","predicate","result","value","index","arraySome","baseIteratee","baseSome","isArray","isIterateeCall","guard","func","undefined","Header","index_js_exposed_default","a","createElement","className","Object","l10n","_super","UpdateKeyConfirm","_this","apply","this","arguments","handleConfirm","props","newKey","onConfirm","component","key","Promise","reject","__extends","prototype","render","_a","children","index_js_exposed","ConfirmButton","confirmButtonText","modalBody","name","modalHeader","UpdateForm","state","handleChange","event","currentTarget","setState","handleReset","UpdateForm_extends","hasChanged","key_UpdateKeyConfirm","onKeyChange","onFormSubmit","onSubmit","id","onChange","placeholder","required","type","buttons","disabled","onClick","BulkUpdateForm","handleSubmit","e","preventDefault","replace","refs","by","BulkUpdateForm_extends","htmlFor","ref","propTypes","prop_types_default","isRequired","PureComponent","BulkUpdateResults","BulkUpdateResults_extends","results","isEmpty","length","hasDuplications","some_default","r","duplicate","canUpdate","map","data-key","array","reloadUpdateKeyPage","componentKey","setTimeout","window","location","baseUrl","encodeURIComponent","BulkUpdate_BulkUpdate","BulkUpdate","updating","updated","newComponentKey","BulkUpdate_extends","loadResults","api_components","then","keys","find","RecentHistory","remove","addGlobalSuccessMessage","catch","request","message","addGlobalErrorMessage","closeAllGlobalMessages","renderUpdating","_b","renderUpdated","key_BulkUpdateForm","bind","key_BulkUpdateResults","object","key_BulkUpdate","es","duck","UpdateKeyForm","handleInputChange","handleResetClick","UpdateKeyForm_extends","FineGrainedUpdate","modules","components","concat","QualifierIcon","qualifier","key_UpdateKeyForm","Key_Key","Key","tab","handleChangeKey","changeKey","handleChangeTab","blur","dataset","Key_extends","componentDidMount","fetchProjectModules","noModules","hasModules","Helmet_default","title","key_UpdateForm","data-tab","href","onError","onSuccess","__webpack_exports__","ownProps","rootReducer","query","actions","SimpleModal","mounted","submitting","stopSubmitting","handleCloseClick","onClose","handleFormSubmit","submit","handleSubmitClick","componentWillUnmount","react__WEBPACK_IMPORTED_MODULE_0__","_components_controls_Modal__WEBPACK_IMPORTED_MODULE_1__","contentLabel","header","onRequestClose","onCloseClick","onSubmitClick","ModalButton","modal","handleButtonClick","handleCloseModal","ConfirmModal","confirmData","renderModalContent","confirmDisable","isDestructive","_common_DeferredSpinner__WEBPACK_IMPORTED_MODULE_2__","loading","_ui_buttons__WEBPACK_IMPORTED_MODULE_4__","autoFocus","_helpers_l10n__WEBPACK_IMPORTED_MODULE_3__","_SimpleModal__WEBPACK_IMPORTED_MODULE_1__","renderConfirmModal","_ConfirmModal__WEBPACK_IMPORTED_MODULE_2__","_ModalButton__WEBPACK_IMPORTED_MODULE_1__"],"mappings":"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","file":"js/325.dd4b710d.chunk.js","sourcesContent":["var baseEach = require('./_baseEach');\n\n/**\n * The base implementation of `_.some` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction baseSome(collection, predicate) {\n  var result;\n\n  baseEach(collection, function(value, index, collection) {\n    result = predicate(value, index, collection);\n    return !result;\n  });\n  return !!result;\n}\n\nmodule.exports = baseSome;\n","var arraySome = require('./_arraySome'),\n    baseIteratee = require('./_baseIteratee'),\n    baseSome = require('./_baseSome'),\n    isArray = require('./isArray'),\n    isIterateeCall = require('./_isIterateeCall');\n\n/**\n * Checks if `predicate` returns truthy for **any** element of `collection`.\n * Iteration is stopped once `predicate` returns truthy. The predicate is\n * invoked with three arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n * @example\n *\n * _.some([null, 0, 'yes', false], Boolean);\n * // => true\n *\n * var users = [\n *   { 'user': 'barney', 'active': true },\n *   { 'user': 'fred',   'active': false }\n * ];\n *\n * // The `_.matches` iteratee shorthand.\n * _.some(users, { 'user': 'barney', 'active': false });\n * // => false\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.some(users, ['active', false]);\n * // => true\n *\n * // The `_.property` iteratee shorthand.\n * _.some(users, 'active');\n * // => true\n */\nfunction some(collection, predicate, guard) {\n  var func = isArray(collection) ? arraySome : baseSome;\n  if (guard && isIterateeCall(collection, predicate, guard)) {\n    predicate = undefined;\n  }\n  return func(collection, baseIteratee(predicate, 3));\n}\n\nmodule.exports = some;\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport React from 'react';\nimport { translate } from '../../../helpers/l10n';\n\nexport default function Header() {\n  return (\n    <header className=\"page-header\">\n      <h1 className=\"page-title\">{translate('update_key.page')}</h1>\n      <div className=\"page-description\">{translate('update_key.page.description')}</div>\n    </header>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport ConfirmButton, { ChildrenProps } from '../../../components/controls/ConfirmButton';\nimport { translate, translateWithParameters } from '../../../helpers/l10n';\n\ninterface Props {\n  children: (props: ChildrenProps) => React.ReactNode;\n  component: { key: string; name: string };\n  newKey: string | undefined;\n  onConfirm: (oldKey: string, newKey: string) => Promise<void>;\n}\n\nexport default class UpdateKeyConfirm extends React.PureComponent<Props> {\n  handleConfirm = () => {\n    return this.props.newKey\n      ? this.props.onConfirm(this.props.component.key, this.props.newKey)\n      : Promise.reject(undefined);\n  };\n\n  render() {\n    const { children, component, newKey } = this.props;\n\n    return (\n      <ConfirmButton\n        confirmButtonText={translate('update_verb')}\n        modalBody={\n          <>\n            {translateWithParameters('update_key.are_you_sure_to_change_key', component.name)}\n            <div className=\"spacer-top\">\n              {translate('update_key.old_key')}\n              {': '}\n              <strong>{component.key}</strong>\n            </div>\n            <div className=\"spacer-top\">\n              {translate('update_key.new_key')}\n              {': '}\n              <strong>{newKey}</strong>\n            </div>\n          </>\n        }\n        modalHeader={translate('update_key.page')}\n        onConfirm={this.handleConfirm}>\n        {children}\n      </ConfirmButton>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport UpdateKeyConfirm from './UpdateKeyConfirm';\nimport { Button, SubmitButton } from '../../../components/ui/buttons';\nimport { translate } from '../../../helpers/l10n';\n\ninterface Props {\n  component: { key: string; name: string };\n  onKeyChange: (oldKey: string, newKey: string) => Promise<void>;\n}\n\ninterface State {\n  newKey?: string;\n}\n\nexport default class UpdateForm extends React.PureComponent<Props, State> {\n  state: State = {};\n\n  handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newKey = event.currentTarget.value;\n    this.setState({ newKey });\n  };\n\n  handleReset = () => {\n    this.setState({ newKey: undefined });\n  };\n\n  render() {\n    const { component } = this.props;\n    const { newKey } = this.state;\n    const value = newKey != null ? newKey : component.key;\n    const hasChanged = value !== component.key;\n\n    return (\n      <UpdateKeyConfirm component={component} newKey={newKey} onConfirm={this.props.onKeyChange}>\n        {({ onFormSubmit }) => (\n          <form onSubmit={onFormSubmit}>\n            <input\n              className=\"input-super-large\"\n              id=\"update-key-new-key\"\n              onChange={this.handleChange}\n              placeholder={translate('update_key.new_key')}\n              required={true}\n              type=\"text\"\n              value={value}\n            />\n\n            <div className=\"spacer-top\">\n              <SubmitButton disabled={!hasChanged} id=\"update-key-submit\">\n                {translate('update_verb')}\n              </SubmitButton>\n\n              <Button\n                className=\"spacer-left\"\n                disabled={!hasChanged}\n                id=\"update-key-reset\"\n                onClick={this.handleReset}\n                type=\"reset\">\n                {translate('reset_verb')}\n              </Button>\n            </div>\n          </form>\n        )}\n      </UpdateKeyConfirm>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from '../../../helpers/l10n';\nimport { SubmitButton } from '../../../components/ui/buttons';\n\nexport default class BulkUpdateForm extends React.PureComponent {\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    const replace = this.refs.replace.value;\n    const by = this.refs.by.value;\n\n    this.props.onSubmit(replace, by);\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <div className=\"modal-field\">\n          <label htmlFor=\"bulk-update-replace\">{translate('update_key.replace')}</label>\n          <input\n            id=\"bulk-update-replace\"\n            name=\"replace\"\n            placeholder={translate('update_key.replace_example')}\n            ref=\"replace\"\n            required={true}\n            type=\"text\"\n          />\n        </div>\n\n        <div className=\"modal-field\">\n          <label htmlFor=\"bulk-update-by\">{translate('update_key.by')}</label>\n          <input\n            id=\"bulk-update-by\"\n            name=\"by\"\n            placeholder={translate('update_key.by_example')}\n            ref=\"by\"\n            required={true}\n            type=\"text\"\n          />\n          <SubmitButton className=\"big-spacer-left\" id=\"bulk-update-see-results\">\n            {translate('update_key.see_results')}\n          </SubmitButton>\n        </div>\n      </form>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { some } from 'lodash';\nimport { translateWithParameters, translate } from '../../../helpers/l10n';\nimport { Button } from '../../../components/ui/buttons';\n\nexport default class BulkUpdateResults extends React.PureComponent {\n  static propTypes = {\n    results: PropTypes.array.isRequired,\n    onConfirm: PropTypes.func.isRequired\n  };\n\n  render() {\n    const { results, replace, by } = this.props;\n    const isEmpty = results.length === 0;\n    const hasDuplications = some(results, r => r.duplicate);\n    const canUpdate = !isEmpty && !hasDuplications;\n\n    return (\n      <div className=\"big-spacer-top\" id=\"bulk-update-simulation\">\n        {isEmpty && (\n          <div className=\"spacer-bottom\" id=\"bulk-update-nothing\">\n            {translateWithParameters('update_key.no_key_to_update', replace)}\n          </div>\n        )}\n\n        {hasDuplications && (\n          <div className=\"spacer-bottom\" id=\"bulk-update-duplicate\">\n            {translateWithParameters('update_key.cant_update_because_duplicate_keys', replace, by)}\n          </div>\n        )}\n\n        {canUpdate && (\n          <div className=\"spacer-bottom\">\n            {translate('update_key.keys_will_be_updated_as_follows')}\n          </div>\n        )}\n\n        {!isEmpty && (\n          <table className=\"data zebra zebra-hover\" id=\"bulk-update-results\">\n            <thead>\n              <tr>\n                <th>{translate('update_key.old_key')}</th>\n                <th>{translate('update_key.new_key')}</th>\n              </tr>\n            </thead>\n            <tbody>\n              {results.map(result => (\n                <tr data-key={result.key} key={result.key}>\n                  <td className=\"js-old-key\">{result.key}</td>\n                  <td className=\"js-new-key\">\n                    {result.duplicate && (\n                      <span className=\"spacer-right badge badge-danger\">\n                        {translate('update_key.duplicate_key')}\n                      </span>\n                    )}\n                    {result.newKey}\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        )}\n\n        <div className=\"big-spacer-top\">\n          {canUpdate && (\n            <Button id=\"bulk-update-confirm\" onClick={this.props.onConfirm}>\n              {translate('update_verb')}\n            </Button>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nexport const reloadUpdateKeyPage = componentKey => {\n  setTimeout(() => {\n    window.location = window.baseUrl + '/project/key?id=' + encodeURIComponent(componentKey);\n  }, 3000);\n};\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport BulkUpdateForm from './BulkUpdateForm';\nimport BulkUpdateResults from './BulkUpdateResults';\nimport { reloadUpdateKeyPage } from './utils';\nimport { translate, translateWithParameters } from '../../../helpers/l10n';\nimport { bulkChangeKey } from '../../../api/components';\nimport { parseError } from '../../../helpers/request';\nimport {\n  addGlobalErrorMessage,\n  addGlobalSuccessMessage,\n  closeAllGlobalMessages\n} from '../../../store/globalMessages/duck';\nimport RecentHistory from '../../../app/components/RecentHistory';\n\nclass BulkUpdate extends React.PureComponent {\n  static propTypes = {\n    component: PropTypes.object.isRequired,\n    addGlobalErrorMessage: PropTypes.func.isRequired,\n    addGlobalSuccessMessage: PropTypes.func.isRequired,\n    closeAllGlobalMessages: PropTypes.func.isRequired\n  };\n\n  state = {\n    updating: false,\n    updated: false,\n    newComponentKey: null\n  };\n\n  handleSubmit(replace, by) {\n    this.loadResults(replace, by);\n  }\n\n  handleConfirm() {\n    this.setState({ updating: true });\n\n    const { component } = this.props;\n    const { replace, by } = this.state;\n\n    bulkChangeKey(component.key, replace, by)\n      .then(r => {\n        const result = r.keys.find(result => result.key === component.key);\n        const newComponentKey = result != null ? result.newKey : component.key;\n\n        if (newComponentKey !== component.key) {\n          RecentHistory.remove(component.key);\n        }\n\n        this.props.addGlobalSuccessMessage(translate('update_key.key_updated.reload'));\n        this.setState({ updating: false });\n        reloadUpdateKeyPage(newComponentKey);\n      })\n      .catch(e => {\n        this.setState({ updating: false });\n        parseError(e).then(message => this.props.addGlobalErrorMessage(message));\n      });\n  }\n\n  loadResults(replace, by) {\n    const { component } = this.props;\n    bulkChangeKey(component.key, replace, by, true)\n      .then(r => {\n        this.setState({ results: r.keys, replace, by });\n        this.props.closeAllGlobalMessages();\n      })\n      .catch(e => {\n        this.setState({ results: null });\n        parseError(e).then(message => this.props.addGlobalErrorMessage(message));\n      });\n  }\n\n  renderUpdating() {\n    return (\n      <div id=\"project-key-bulk-update\">\n        <i className=\"spinner\" />\n      </div>\n    );\n  }\n\n  render() {\n    const { component } = this.props;\n    const { updating, updated } = this.state;\n    const { results, replace, by } = this.state;\n\n    if (updating) {\n      return this.renderUpdating();\n    }\n\n    if (updated) {\n      return this.renderUpdated();\n    }\n\n    return (\n      <div id=\"project-key-bulk-update\">\n        <header className=\"big-spacer-bottom\">\n          <div className=\"spacer-bottom\">{translate('update_key.bulk_change_description')}</div>\n          <div>\n            {translateWithParameters(\n              'update_key.current_key_for_project_x_is_x',\n              component.name,\n              component.key\n            )}\n          </div>\n        </header>\n\n        <BulkUpdateForm onSubmit={this.handleSubmit.bind(this)} />\n\n        {results != null && (\n          <BulkUpdateResults\n            results={results}\n            replace={replace}\n            by={by}\n            onConfirm={this.handleConfirm.bind(this)}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default connect(null, {\n  addGlobalErrorMessage,\n  addGlobalSuccessMessage,\n  closeAllGlobalMessages\n})(BulkUpdate);\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport UpdateKeyConfirm from './UpdateKeyConfirm';\nimport { Button } from '../../../components/ui/buttons';\nimport { translate } from '../../../helpers/l10n';\n\ninterface Props {\n  component: { key: string; name: string };\n  onKeyChange: (oldKey: string, newKey: string) => Promise<void>;\n}\n\ninterface State {\n  newKey?: string;\n}\n\nexport default class UpdateKeyForm extends React.PureComponent<Props, State> {\n  state: State = {};\n\n  handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newKey = event.currentTarget.value;\n    this.setState({ newKey });\n  };\n\n  handleResetClick = () => {\n    this.setState({ newKey: undefined });\n  };\n\n  render() {\n    const { component } = this.props;\n    const { newKey } = this.state;\n    const value = newKey !== undefined ? newKey : component.key;\n    const hasChanged = newKey !== undefined && newKey !== component.key;\n\n    return (\n      <div className=\"js-fine-grained-update\" data-key={component.key}>\n        <input\n          className=\"input-super-large big-spacer-right\"\n          onChange={this.handleInputChange}\n          type=\"text\"\n          value={value}\n        />\n\n        <UpdateKeyConfirm component={component} newKey={newKey} onConfirm={this.props.onKeyChange}>\n          {({ onClick }) => (\n            <Button disabled={!hasChanged} onClick={onClick}>\n              {translate('update_verb')}\n            </Button>\n          )}\n        </UpdateKeyConfirm>\n\n        <Button className=\"spacer-left\" disabled={!hasChanged} onClick={this.handleResetClick}>\n          {translate('reset_verb')}\n        </Button>\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport React from 'react';\nimport UpdateKeyForm from './UpdateKeyForm';\nimport QualifierIcon from '../../../components/icons-components/QualifierIcon';\n\nexport default function FineGrainedUpdate(props) {\n  const { component, modules } = props;\n  const components = [component, ...modules];\n\n  return (\n    <div id=\"project-key-fine-grained-update\">\n      <table className=\"data zebra\">\n        <tbody>\n          {components.map(component => (\n            <tr key={component.key}>\n              <td className=\"width-40\">\n                <QualifierIcon qualifier={component.qualifier} /> {component.name}\n              </td>\n              <td>\n                <UpdateKeyForm component={component} onKeyChange={props.onKeyChange} />\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { connect } from 'react-redux';\nimport Header from './Header';\nimport UpdateForm from './UpdateForm';\nimport BulkUpdate from './BulkUpdate';\nimport FineGrainedUpdate from './FineGrainedUpdate';\nimport { reloadUpdateKeyPage } from './utils';\nimport { changeKey, fetchProjectModules } from '../store/actions';\nimport { translate } from '../../../helpers/l10n';\nimport {\n  addGlobalErrorMessage,\n  addGlobalSuccessMessage,\n  closeAllGlobalMessages\n} from '../../../store/globalMessages/duck';\nimport RecentHistory from '../../../app/components/RecentHistory';\nimport { getProjectAdminProjectModules } from '../../../store/rootReducer';\n\nclass Key extends React.PureComponent {\n  static propTypes = {\n    component: PropTypes.object,\n    fetchProjectModules: PropTypes.func.isRequired,\n    changeKey: PropTypes.func.isRequired,\n    addGlobalErrorMessage: PropTypes.func.isRequired,\n    addGlobalSuccessMessage: PropTypes.func.isRequired,\n    closeAllGlobalMessages: PropTypes.func.isRequired\n  };\n\n  state = {\n    tab: 'bulk'\n  };\n\n  componentDidMount() {\n    this.props.fetchProjectModules(this.props.component.key);\n  }\n\n  handleChangeKey = (key, newKey) => {\n    return this.props.changeKey(key, newKey).then(() => {\n      if (key === this.props.component.key) {\n        this.props.addGlobalSuccessMessage(translate('update_key.key_updated.reload'));\n        RecentHistory.remove(key);\n        reloadUpdateKeyPage(newKey);\n      } else {\n        this.props.addGlobalSuccessMessage(translate('update_key.key_updated'));\n      }\n    });\n  };\n\n  handleChangeTab = event => {\n    event.preventDefault();\n    event.currentTarget.blur();\n    const { tab } = event.currentTarget.dataset;\n    this.setState({ tab });\n    this.props.closeAllGlobalMessages();\n  };\n\n  render() {\n    const { component, modules } = this.props;\n\n    const noModules = modules != null && modules.length === 0;\n    const hasModules = modules != null && modules.length > 0;\n\n    const { tab } = this.state;\n\n    return (\n      <div className=\"page page-limited\" id=\"project-key\">\n        <Helmet title={translate('update_key.page')} />\n        <Header />\n\n        {modules == null && <i className=\"spinner\" />}\n\n        {noModules && (\n          <div>\n            <UpdateForm component={component} onKeyChange={this.handleChangeKey} />\n          </div>\n        )}\n\n        {hasModules && (\n          <div className=\"boxed-group boxed-group-inner\">\n            <div className=\"big-spacer-bottom\">\n              <ul className=\"tabs\">\n                <li>\n                  <a\n                    className={tab === 'bulk' ? 'selected' : ''}\n                    data-tab=\"bulk\"\n                    href=\"#\"\n                    id=\"update-key-tab-bulk\"\n                    onClick={this.handleChangeTab}>\n                    {translate('update_key.bulk_update')}\n                  </a>\n                </li>\n                <li>\n                  <a\n                    className={tab === 'fine' ? 'selected' : ''}\n                    data-tab=\"fine\"\n                    href=\"#\"\n                    id=\"update-key-tab-fine\"\n                    onClick={this.handleChangeTab}>\n                    {translate('update_key.fine_grained_key_update')}\n                  </a>\n                </li>\n              </ul>\n            </div>\n\n            {tab === 'bulk' && <BulkUpdate component={component} />}\n\n            {tab === 'fine' && (\n              <FineGrainedUpdate\n                component={component}\n                modules={modules}\n                onError={this.props.addGlobalErrorMessage}\n                onKeyChange={this.handleChangeKey}\n                onSuccess={this.props.closeAllGlobalMessages}\n              />\n            )}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  modules: getProjectAdminProjectModules(state, ownProps.location.query.id)\n});\n\nexport default connect(mapStateToProps, {\n  fetchProjectModules,\n  changeKey,\n  addGlobalErrorMessage,\n  addGlobalSuccessMessage,\n  closeAllGlobalMessages\n})(Key);\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Modal from '../../components/controls/Modal';\n\nexport interface ChildrenProps {\n  onCloseClick: (event?: React.SyntheticEvent<HTMLElement>) => void;\n  onFormSubmit: (event: React.SyntheticEvent<HTMLFormElement>) => void;\n  onSubmitClick: (event?: React.SyntheticEvent<HTMLElement>) => void;\n  submitting: boolean;\n}\n\ninterface Props {\n  children: (props: ChildrenProps) => React.ReactNode;\n  header: string;\n  onClose: () => void;\n  onSubmit: () => void | Promise<void>;\n}\n\ninterface State {\n  submitting: boolean;\n}\n\nexport default class SimpleModal extends React.Component<Props, State> {\n  mounted = false;\n  state: State = { submitting: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  stopSubmitting = () => {\n    if (this.mounted) {\n      this.setState({ submitting: false });\n    }\n  };\n\n  handleCloseClick = (event?: React.SyntheticEvent<HTMLElement>) => {\n    if (event) {\n      event.preventDefault();\n      event.currentTarget.blur();\n    }\n    this.props.onClose();\n  };\n\n  handleFormSubmit = (event: React.SyntheticEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    this.submit();\n  };\n\n  handleSubmitClick = (event?: React.SyntheticEvent<HTMLElement>) => {\n    if (event) {\n      event.preventDefault();\n      event.currentTarget.blur();\n    }\n    this.submit();\n  };\n\n  submit = () => {\n    const result = this.props.onSubmit();\n    if (result) {\n      this.setState({ submitting: true });\n      result.then(this.stopSubmitting, this.stopSubmitting);\n    }\n  };\n\n  render() {\n    return (\n      <Modal contentLabel={this.props.header} onRequestClose={this.props.onClose}>\n        {this.props.children({\n          onCloseClick: this.handleCloseClick,\n          onFormSubmit: this.handleFormSubmit,\n          onSubmitClick: this.handleSubmitClick,\n          submitting: this.state.submitting\n        })}\n      </Modal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\n\nexport interface ChildrenProps {\n  onClick: () => void;\n  onFormSubmit: (event: React.FormEvent<HTMLFormElement>) => void;\n}\n\nexport interface ModalProps {\n  onClose: () => void;\n}\n\nexport interface Props {\n  children: (props: ChildrenProps) => React.ReactNode;\n  modal: (props: ModalProps) => React.ReactNode;\n}\n\ninterface State {\n  modal: boolean;\n}\n\nexport default class ModalButton extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { modal: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleButtonClick = () => {\n    this.setState({ modal: true });\n  };\n\n  handleFormSubmit = (event?: React.FormEvent<HTMLFormElement>) => {\n    if (event) {\n      event.preventDefault();\n    }\n    this.setState({ modal: true });\n  };\n\n  handleCloseModal = () => {\n    if (this.mounted) {\n      this.setState({ modal: false });\n    }\n  };\n\n  render() {\n    return (\n      <>\n        {this.props.children({\n          onClick: this.handleButtonClick,\n          onFormSubmit: this.handleFormSubmit\n        })}\n        {this.state.modal && this.props.modal({ onClose: this.handleCloseModal })}\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport SimpleModal, { ChildrenProps } from './SimpleModal';\nimport DeferredSpinner from '../common/DeferredSpinner';\nimport { translate } from '../../helpers/l10n';\nimport { SubmitButton, ResetButtonLink } from '../ui/buttons';\n\ninterface Props<T> {\n  children: React.ReactNode;\n  confirmButtonText: string;\n  confirmData?: T;\n  confirmDisable?: boolean;\n  header: string;\n  isDestructive?: boolean;\n  onClose: () => void;\n  onConfirm: (data?: T) => void | Promise<void>;\n}\n\nexport default class ConfirmModal<T = string> extends React.PureComponent<Props<T>> {\n  mounted = false;\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleSubmit = () => {\n    const result = this.props.onConfirm(this.props.confirmData);\n    if (result) {\n      return result.then(this.props.onClose, () => {});\n    } else {\n      this.props.onClose();\n      return undefined;\n    }\n  };\n\n  renderModalContent = ({ onCloseClick, onFormSubmit, submitting }: ChildrenProps) => {\n    const { children, confirmButtonText, confirmDisable, header, isDestructive } = this.props;\n    return (\n      <form onSubmit={onFormSubmit}>\n        <header className=\"modal-head\">\n          <h2>{header}</h2>\n        </header>\n        <div className=\"modal-body\">{children}</div>\n        <footer className=\"modal-foot\">\n          <DeferredSpinner className=\"spacer-right\" loading={submitting} />\n          <SubmitButton\n            autoFocus={true}\n            className={isDestructive ? 'button-red' : undefined}\n            disabled={submitting || confirmDisable}>\n            {confirmButtonText}\n          </SubmitButton>\n          <ResetButtonLink disabled={submitting} onClick={onCloseClick}>\n            {translate('cancel')}\n          </ResetButtonLink>\n        </footer>\n      </form>\n    );\n  };\n\n  render() {\n    const { header } = this.props;\n    return (\n      <SimpleModal header={header} onClose={this.props.onClose} onSubmit={this.handleSubmit}>\n        {this.renderModalContent}\n      </SimpleModal>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport ModalButton, { ChildrenProps, ModalProps } from './ModalButton';\nimport ConfirmModal from './ConfirmModal';\n\nexport { ChildrenProps } from './ModalButton';\n\ninterface Props {\n  children: (props: ChildrenProps) => React.ReactNode;\n  confirmButtonText: string;\n  confirmData?: string;\n  confirmDisable?: boolean;\n  isDestructive?: boolean;\n  modalBody: React.ReactNode;\n  modalHeader: string;\n  onConfirm: (data?: string) => void | Promise<void>;\n}\n\ninterface State {\n  modal: boolean;\n}\n\nexport default class ConfirmButton extends React.PureComponent<Props, State> {\n  renderConfirmModal = ({ onClose }: ModalProps) => {\n    return (\n      <ConfirmModal\n        confirmButtonText={this.props.confirmButtonText}\n        confirmData={this.props.confirmData}\n        confirmDisable={this.props.confirmDisable}\n        header={this.props.modalHeader}\n        isDestructive={this.props.isDestructive}\n        onClose={onClose}\n        onConfirm={this.props.onConfirm}>\n        {this.props.modalBody}\n      </ConfirmModal>\n    );\n  };\n\n  render() {\n    return <ModalButton modal={this.renderConfirmModal}>{this.props.children}</ModalButton>;\n  }\n}\n"],"sourceRoot":""}