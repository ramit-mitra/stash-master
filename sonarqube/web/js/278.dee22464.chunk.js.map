{"version":3,"sources":["webpack:///./node_modules/lodash/times.js","webpack:///./src/main/js/apps/component/components/App.tsx","webpack:///./node_modules/lodash/map.js","webpack:///./node_modules/lodash/groupBy.js","webpack:///./node_modules/lodash/difference.js","webpack:///./node_modules/lodash/orderBy.js","webpack:///./node_modules/lodash/_castArrayLikeObject.js","webpack:///./node_modules/lodash/_baseIntersection.js","webpack:///./node_modules/lodash/intersection.js"],"names":["module","exports","n","iteratee","index","result","Array","App","_super","_this","apply","this","arguments","scrollToLine","line","props","location","query","row","document","querySelector","rect","getBoundingClientRect","topOffset","window","innerHeight","goal","top","scrollTo","__extends","prototype","render","_a","branch","id","pullRequest","finalLine","Number","undefined","fakeBranchLike","isMain","mergeBranch","name","type","_app_types__WEBPACK_IMPORTED_MODULE_1__","SHORT","base","key","title","react__WEBPACK_IMPORTED_MODULE_0__","className","_components_SourceViewer_SourceViewer__WEBPACK_IMPORTED_MODULE_2__","aroundLine","branchLike","component","highlightedLine","onLoaded","arrayMap","__webpack_require__","baseIteratee","baseMap","isArray","collection","baseAssignValue","createAggregator","hasOwnProperty","Object","groupBy","value","call","push","baseDifference","baseFlatten","baseRest","isArrayLikeObject","difference","array","values","baseOrderBy","iteratees","orders","guard","SetCache","arrayIncludes","arrayIncludesWith","baseUnary","cacheHas","nativeMin","Math","min","arrays","comparator","includes","length","othLength","othIndex","caches","maxLength","Infinity","seen","outer","computed","cache","baseIntersection","castArrayLikeObject","intersection","mapped"],"mappings":"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","file":"js/278.dee22464.chunk.js","sourcesContent":["/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\nmodule.exports = baseTimes;\n","/*\n * SonarQube\n * Copyright (C) 2009-2018 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { PullRequest, BranchType, ShortLivingBranch } from '../../../app/types';\nimport SourceViewer from '../../../components/SourceViewer/SourceViewer';\n\ninterface Props {\n  location: {\n    query: {\n      branch?: string;\n      id: string;\n      line?: string;\n      pullRequest?: string;\n    };\n  };\n}\n\nexport default class App extends React.PureComponent<Props> {\n  scrollToLine = () => {\n    const { line } = this.props.location.query;\n    if (line) {\n      const row = document.querySelector(`.source-line[data-line-number=\"${line}\"]`);\n      if (row) {\n        const rect = row.getBoundingClientRect();\n        const topOffset = window.innerHeight / 2 - 60;\n        const goal = rect.top - topOffset;\n        window.scrollTo(0, goal);\n      }\n    }\n  };\n\n  render() {\n    const { branch, id, line, pullRequest } = this.props.location.query;\n\n    const finalLine = line ? Number(line) : undefined;\n\n    // TODO find a way to avoid creating this fakeBranchLike\n    // probably the best way would be to drop this page completely\n    // and redirect to the Code page\n    let fakeBranchLike: ShortLivingBranch | PullRequest | undefined = undefined;\n    if (branch) {\n      fakeBranchLike = {\n        isMain: false,\n        mergeBranch: '',\n        name: branch,\n        type: BranchType.SHORT\n      } as ShortLivingBranch;\n    } else if (pullRequest) {\n      fakeBranchLike = { base: '', branch: '', key: pullRequest, title: '' } as PullRequest;\n    }\n\n    return (\n      <div className=\"page page-limited\">\n        <SourceViewer\n          aroundLine={finalLine}\n          branchLike={fakeBranchLike}\n          component={id}\n          highlightedLine={finalLine}\n          onLoaded={this.scrollToLine}\n        />\n      </div>\n    );\n  }\n}\n","var arrayMap = require('./_arrayMap'),\n    baseIteratee = require('./_baseIteratee'),\n    baseMap = require('./_baseMap'),\n    isArray = require('./isArray');\n\n/**\n * Creates an array of values by running each element in `collection` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, index|key, collection).\n *\n * Many lodash methods are guarded to work as iteratees for methods like\n * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n *\n * The guarded methods are:\n * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n * @example\n *\n * function square(n) {\n *   return n * n;\n * }\n *\n * _.map([4, 8], square);\n * // => [16, 64]\n *\n * _.map({ 'a': 4, 'b': 8 }, square);\n * // => [16, 64] (iteration order is not guaranteed)\n *\n * var users = [\n *   { 'user': 'barney' },\n *   { 'user': 'fred' }\n * ];\n *\n * // The `_.property` iteratee shorthand.\n * _.map(users, 'user');\n * // => ['barney', 'fred']\n */\nfunction map(collection, iteratee) {\n  var func = isArray(collection) ? arrayMap : baseMap;\n  return func(collection, baseIteratee(iteratee, 3));\n}\n\nmodule.exports = map;\n","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The order of grouped values\n * is determined by the order they occur in `collection`. The corresponding\n * value of each key is an array of elements responsible for generating the\n * key. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n * // => { '4': [4.2], '6': [6.1, 6.3] }\n *\n * // The `_.property` iteratee shorthand.\n * _.groupBy(['one', 'two', 'three'], 'length');\n * // => { '3': ['one', 'two'], '5': ['three'] }\n */\nvar groupBy = createAggregator(function(result, value, key) {\n  if (hasOwnProperty.call(result, key)) {\n    result[key].push(value);\n  } else {\n    baseAssignValue(result, key, [value]);\n  }\n});\n\nmodule.exports = groupBy;\n","var baseDifference = require('./_baseDifference'),\n    baseFlatten = require('./_baseFlatten'),\n    baseRest = require('./_baseRest'),\n    isArrayLikeObject = require('./isArrayLikeObject');\n\n/**\n * Creates an array of `array` values not included in the other given arrays\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons. The order and references of result values are\n * determined by the first array.\n *\n * **Note:** Unlike `_.pullAll`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {...Array} [values] The values to exclude.\n * @returns {Array} Returns the new array of filtered values.\n * @see _.without, _.xor\n * @example\n *\n * _.difference([2, 1], [2, 3]);\n * // => [1]\n */\nvar difference = baseRest(function(array, values) {\n  return isArrayLikeObject(array)\n    ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n    : [];\n});\n\nmodule.exports = difference;\n","var baseOrderBy = require('./_baseOrderBy'),\n    isArray = require('./isArray');\n\n/**\n * This method is like `_.sortBy` except that it allows specifying the sort\n * orders of the iteratees to sort by. If `orders` is unspecified, all values\n * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n * descending or \"asc\" for ascending sort order of corresponding values.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n *  The iteratees to sort by.\n * @param {string[]} [orders] The sort orders of `iteratees`.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n * @returns {Array} Returns the new sorted array.\n * @example\n *\n * var users = [\n *   { 'user': 'fred',   'age': 48 },\n *   { 'user': 'barney', 'age': 34 },\n *   { 'user': 'fred',   'age': 40 },\n *   { 'user': 'barney', 'age': 36 }\n * ];\n *\n * // Sort by `user` in ascending order and by `age` in descending order.\n * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n */\nfunction orderBy(collection, iteratees, orders, guard) {\n  if (collection == null) {\n    return [];\n  }\n  if (!isArray(iteratees)) {\n    iteratees = iteratees == null ? [] : [iteratees];\n  }\n  orders = guard ? undefined : orders;\n  if (!isArray(orders)) {\n    orders = orders == null ? [] : [orders];\n  }\n  return baseOrderBy(collection, iteratees, orders);\n}\n\nmodule.exports = orderBy;\n","var isArrayLikeObject = require('./isArrayLikeObject');\n\n/**\n * Casts `value` to an empty array if it's not an array like object.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {Array|Object} Returns the cast array-like object.\n */\nfunction castArrayLikeObject(value) {\n  return isArrayLikeObject(value) ? value : [];\n}\n\nmodule.exports = castArrayLikeObject;\n","var SetCache = require('./_SetCache'),\n    arrayIncludes = require('./_arrayIncludes'),\n    arrayIncludesWith = require('./_arrayIncludesWith'),\n    arrayMap = require('./_arrayMap'),\n    baseUnary = require('./_baseUnary'),\n    cacheHas = require('./_cacheHas');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min;\n\n/**\n * The base implementation of methods like `_.intersection`, without support\n * for iteratee shorthands, that accepts an array of arrays to inspect.\n *\n * @private\n * @param {Array} arrays The arrays to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of shared values.\n */\nfunction baseIntersection(arrays, iteratee, comparator) {\n  var includes = comparator ? arrayIncludesWith : arrayIncludes,\n      length = arrays[0].length,\n      othLength = arrays.length,\n      othIndex = othLength,\n      caches = Array(othLength),\n      maxLength = Infinity,\n      result = [];\n\n  while (othIndex--) {\n    var array = arrays[othIndex];\n    if (othIndex && iteratee) {\n      array = arrayMap(array, baseUnary(iteratee));\n    }\n    maxLength = nativeMin(array.length, maxLength);\n    caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n      ? new SetCache(othIndex && array)\n      : undefined;\n  }\n  array = arrays[0];\n\n  var index = -1,\n      seen = caches[0];\n\n  outer:\n  while (++index < length && result.length < maxLength) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (!(seen\n          ? cacheHas(seen, computed)\n          : includes(result, computed, comparator)\n        )) {\n      othIndex = othLength;\n      while (--othIndex) {\n        var cache = caches[othIndex];\n        if (!(cache\n              ? cacheHas(cache, computed)\n              : includes(arrays[othIndex], computed, comparator))\n            ) {\n          continue outer;\n        }\n      }\n      if (seen) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseIntersection;\n","var arrayMap = require('./_arrayMap'),\n    baseIntersection = require('./_baseIntersection'),\n    baseRest = require('./_baseRest'),\n    castArrayLikeObject = require('./_castArrayLikeObject');\n\n/**\n * Creates an array of unique values that are included in all given arrays\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons. The order and references of result values are\n * determined by the first array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @returns {Array} Returns the new array of intersecting values.\n * @example\n *\n * _.intersection([2, 1], [2, 3]);\n * // => [2]\n */\nvar intersection = baseRest(function(arrays) {\n  var mapped = arrayMap(arrays, castArrayLikeObject);\n  return (mapped.length && mapped[0] === arrays[0])\n    ? baseIntersection(mapped)\n    : [];\n});\n\nmodule.exports = intersection;\n"],"sourceRoot":""}